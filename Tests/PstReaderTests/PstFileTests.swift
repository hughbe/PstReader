//
//  OutlookPstFileTests.swift
//
//
//  Created by Hugh Bellamy on 16/09/2020.
//

import MAPI
import XCTest
@testable import PstReader

final class OutlookPstFileTests: XCTestCase {
    func testExample() throws {
        do {
            let data = try getData(name: "backup")
            let pst = try PstFile(data: data)

            XCTAssertNotNil(pst.rootFolder)
            XCTAssertEqual("", pst.rootFolder!.displayName)
            XCTAssertEqual(0, pst.rootFolder!.contentCount)
            XCTAssertEqual(0, pst.rootFolder!.contentUnreadCount)
            XCTAssertTrue(pst.rootFolder!.subfolders!)
            XCTAssertEqual(2, pst.rootFolder!.children.count)
            do {
                XCTAssertEqual("Search Root", pst.rootFolder!.children[0].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[0].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[0].contentUnreadCount)
                XCTAssertFalse(pst.rootFolder!.children[0].subfolders!)
                XCTAssertEqual(0, pst.rootFolder!.children[0].children.count)

                XCTAssertEqual("Top of Outlook data file", pst.rootFolder!.children[1].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].contentUnreadCount)
                XCTAssertTrue(pst.rootFolder!.children[1].subfolders!)
                XCTAssertEqual(20, pst.rootFolder!.children[1].children.count)

                XCTAssertEqual("Archive", pst.rootFolder!.children[1].children[0].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[0].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[0].contentUnreadCount)
                XCTAssertFalse(pst.rootFolder!.children[1].children[0].subfolders!)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[0].children.count)

                XCTAssertEqual("Calendar", pst.rootFolder!.children[1].children[1].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[1].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[1].contentUnreadCount)
                XCTAssertFalse(pst.rootFolder!.children[1].children[1].subfolders!)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[1].children.count)

                XCTAssertEqual("Contacts", pst.rootFolder!.children[1].children[2].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[2].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[2].contentUnreadCount)
                XCTAssertTrue(pst.rootFolder!.children[1].children[2].subfolders!)
                XCTAssertEqual(2, pst.rootFolder!.children[1].children[2].children.count)
                
                do {
                    XCTAssertEqual("GAL Contacts", pst.rootFolder!.children[1].children[2].children[0].displayName)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[2].children[0].contentCount)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[2].children[0].contentUnreadCount)
                    XCTAssertFalse(pst.rootFolder!.children[1].children[2].children[0].subfolders!)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[2].children[0].children.count)
                    
                    XCTAssertEqual("Recipient Cache", pst.rootFolder!.children[1].children[2].children[1].displayName)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[2].children[1].contentCount)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[2].children[1].contentUnreadCount)
                    XCTAssertFalse(pst.rootFolder!.children[1].children[2].children[1].subfolders!)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[2].children[1].children.count)
                }

                XCTAssertEqual("Conversation Action Settings", pst.rootFolder!.children[1].children[3].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[3].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[3].contentUnreadCount)
                XCTAssertFalse(pst.rootFolder!.children[1].children[3].subfolders!)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[3].children.count)

                XCTAssertEqual("Conversation History", pst.rootFolder!.children[1].children[4].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[4].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[4].contentUnreadCount)
                XCTAssertTrue(pst.rootFolder!.children[1].children[4].subfolders!)
                XCTAssertEqual(1, pst.rootFolder!.children[1].children[4].children.count)
                
                do {
                    XCTAssertEqual("Team Chat", pst.rootFolder!.children[1].children[4].children[0].displayName)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[4].children[0].contentCount)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[4].children[0].contentUnreadCount)
                    XCTAssertFalse(pst.rootFolder!.children[1].children[4].children[0].subfolders!)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[4].children[0].children.count)
                }

                XCTAssertEqual("Deleted Items", pst.rootFolder!.children[1].children[5].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[5].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[5].contentUnreadCount)
                XCTAssertFalse(pst.rootFolder!.children[1].children[5].subfolders!)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[5].children.count)

                XCTAssertEqual("Drafts", pst.rootFolder!.children[1].children[6].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[6].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[6].contentUnreadCount)
                XCTAssertFalse(pst.rootFolder!.children[1].children[6].subfolders!)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[6].children.count)

                XCTAssertEqual("ExternalContacts", pst.rootFolder!.children[1].children[7].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[7].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[7].contentUnreadCount)
                XCTAssertFalse(pst.rootFolder!.children[1].children[7].subfolders!)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[7].children.count)

                XCTAssertEqual("Files", pst.rootFolder!.children[1].children[8].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[8].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[8].contentUnreadCount)
                XCTAssertFalse(pst.rootFolder!.children[1].children[8].subfolders!)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[8].children.count)

                XCTAssertEqual("Inbox", pst.rootFolder!.children[1].children[9].displayName)
                XCTAssertEqual(1, pst.rootFolder!.children[1].children[9].contentCount)
                XCTAssertEqual(1, pst.rootFolder!.children[1].children[9].contentUnreadCount)
                XCTAssertFalse(pst.rootFolder!.children[1].children[9].subfolders!)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[9].children.count)

                XCTAssertEqual("Journal", pst.rootFolder!.children[1].children[10].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[10].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[10].contentUnreadCount)
                XCTAssertFalse(pst.rootFolder!.children[1].children[10].subfolders!)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[10].children.count)

                XCTAssertEqual("Junk Email", pst.rootFolder!.children[1].children[11].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[11].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[11].contentUnreadCount)
                XCTAssertFalse(pst.rootFolder!.children[1].children[11].subfolders!)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[11].children.count)

                XCTAssertEqual("Notes", pst.rootFolder!.children[1].children[12].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[12].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[12].contentUnreadCount)
                XCTAssertFalse(pst.rootFolder!.children[1].children[12].subfolders!)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[12].children.count)

                XCTAssertEqual("Outbox", pst.rootFolder!.children[1].children[13].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[13].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[13].contentUnreadCount)
                XCTAssertFalse(pst.rootFolder!.children[1].children[13].subfolders!)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[13].children.count)

                XCTAssertEqual("Quick Step Settings", pst.rootFolder!.children[1].children[14].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[14].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[14].contentUnreadCount)
                XCTAssertFalse(pst.rootFolder!.children[1].children[14].subfolders!)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[14].children.count)

                XCTAssertEqual("RSS Feeds", pst.rootFolder!.children[1].children[15].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[15].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[15].contentUnreadCount)
                XCTAssertFalse(pst.rootFolder!.children[1].children[15].subfolders!)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[15].children.count)

                XCTAssertEqual("Sent Items", pst.rootFolder!.children[1].children[16].displayName)
                XCTAssertEqual(1, pst.rootFolder!.children[1].children[16].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[16].contentUnreadCount)
                XCTAssertFalse(pst.rootFolder!.children[1].children[16].subfolders!)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[16].children.count)

                XCTAssertEqual("Sync Issues", pst.rootFolder!.children[1].children[17].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[17].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[17].contentUnreadCount)
                XCTAssertTrue(pst.rootFolder!.children[1].children[17].subfolders!)
                XCTAssertEqual(3, pst.rootFolder!.children[1].children[17].children.count)
                
                do {
                    XCTAssertEqual("Conflicts", pst.rootFolder!.children[1].children[17].children[0].displayName)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[17].children[0].contentCount)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[17].children[0].contentUnreadCount)
                    XCTAssertFalse(pst.rootFolder!.children[1].children[17].children[0].subfolders!)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[17].children[0].children.count)
                    
                    XCTAssertEqual("Local Failures", pst.rootFolder!.children[1].children[17].children[1].displayName)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[17].children[1].contentCount)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[17].children[1].contentUnreadCount)
                    XCTAssertFalse(pst.rootFolder!.children[1].children[17].children[1].subfolders!)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[17].children[1].children.count)
                    
                    XCTAssertEqual("Server Failures", pst.rootFolder!.children[1].children[17].children[2].displayName)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[17].children[2].contentCount)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[17].children[2].contentUnreadCount)
                    XCTAssertFalse(pst.rootFolder!.children[1].children[17].children[2].subfolders!)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[17].children[2].children.count)
                }

                XCTAssertEqual("Tasks", pst.rootFolder!.children[1].children[18].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[18].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[18].contentUnreadCount)
                XCTAssertFalse(pst.rootFolder!.children[1].children[18].subfolders!)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[18].children.count)

                XCTAssertEqual("Yammer Root", pst.rootFolder!.children[1].children[19].displayName)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[19].contentCount)
                XCTAssertEqual(0, pst.rootFolder!.children[1].children[19].contentUnreadCount)
                XCTAssertTrue(pst.rootFolder!.children[1].children[19].subfolders!)
                XCTAssertEqual(3, pst.rootFolder!.children[1].children[19].children.count)
                
                do {
                    XCTAssertEqual("Feeds", pst.rootFolder!.children[1].children[19].children[0].displayName)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[19].children[0].contentCount)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[19].children[0].contentUnreadCount)
                    XCTAssertFalse(pst.rootFolder!.children[1].children[19].children[0].subfolders!)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[19].children[0].children.count)
                    
                    XCTAssertEqual("Inbound", pst.rootFolder!.children[1].children[19].children[1].displayName)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[19].children[1].contentCount)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[19].children[1].contentUnreadCount)
                    XCTAssertFalse(pst.rootFolder!.children[1].children[19].children[1].subfolders!)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[19].children[1].children.count)
                    
                    XCTAssertEqual("Outbound", pst.rootFolder!.children[1].children[19].children[2].displayName)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[19].children[2].contentCount)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[19].children[2].contentUnreadCount)
                    XCTAssertFalse(pst.rootFolder!.children[1].children[19].children[2].subfolders!)
                    XCTAssertEqual(0, pst.rootFolder!.children[1].children[19].children[2].children.count)
                }
                
                let inboxFolder = pst.rootFolder!["Top of Outlook data file"]!["Inbox"]!
                let messages = try inboxFolder.getMessages()
                XCTAssertEqual(1, messages.count)
                XCTAssertEqual(0x00000016, messages[0].ltpRowVer)
                XCTAssertEqual(2097188, messages[0].ltpRowId)
                XCTAssertEqual("Hugh Bellamy", messages[0].sentRepresentingName)
                XCTAssertEqual(1600247575.0, messages[0].clientSubmitTime?.timeIntervalSince1970)
                XCTAssertEqual(.normal, messages[0].sensitivity)
                XCTAssertEqual(0x0000B7A8, messages[0].messageSize)
                XCTAssertEqual(.normal, messages[0].importance)
                XCTAssertEqual("Success", messages[0].conversationTopic)
                XCTAssertEqual(1600247578.0, messages[0].messageDeliveryTime?.timeIntervalSince1970)
                XCTAssertEqual("IPM.Note", messages[0].messageClass)
                XCTAssertEqual("\u{01}\u{01}Success", messages[0].subject)
                XCTAssertEqual(Data([0x26, 0x5A, 0x36, 0xB5, 0x94, 0x08, 0x45, 0x06, 0xA9, 0xD0, 0xF3, 0x22, 0xFB, 0x30, 0x4B, 0xE7]), messages[0].conversationId)
                XCTAssertEqual([], messages[0].messageFlags)
                XCTAssertEqual([], messages[0].messageStatus)
                XCTAssertEqual(Data([0xF2, 0x2D, 0x19, 0x1D, 0xC4, 0xDB, 0x71, 0x45, 0x94, 0xF1, 0x8E, 0x02, 0x8B, 0x36, 0xFB, 0xC0]), messages[0].searchKey)
                XCTAssertEqual("Hugh Bellamy", messages[0].displayTo)
                XCTAssertTrue(messages[0].messageToMe!)
                XCTAssertFalse(messages[0].messageCcMe!)
                XCTAssertEqual(Data([0xF2, 0x2D, 0x19, 0x1D, 0xC4, 0xDB, 0x71, 0x45, 0x94, 0xF1, 0x8E, 0x02, 0x8B, 0x36, 0xFB, 0xC0]), messages[0].searchKey)
                XCTAssertEqual(1600247579.0, messages[0].lastModificationTime?.timeIntervalSince1970)
    
                XCTAssertEqual(0, messages[0].recipients.count)
                XCTAssertEqual(0, messages[0].attachments.count)
                
                let details = try messages[0].getMessageDetails()
                XCTAssertEqual(1, details.recipients.count)
                XCTAssertEqual("pstreadertests@outlook.com", details.recipients[0].emailAddress)
                XCTAssertEqual(0x00000015, details.recipients[0].ltpRowVer)
                XCTAssertEqual(.primaryRecipient, details.recipients[0].recipientType)
                let recipientRecipientEntryId = details.recipients[0].recipientEntryId as! OneOffEntryID
                XCTAssertEqual(0, recipientRecipientEntryId.flags)
                XCTAssertEqual(UUID(uuidString: "812B1FA4-BEA3-1019-9D6E-00DD010F5402"), recipientRecipientEntryId.providerUid)
                XCTAssertEqual("Hugh Bellamy", recipientRecipientEntryId.displayName)
                XCTAssertEqual("SMTP", recipientRecipientEntryId.addressType)
                XCTAssertEqual("pstreadertests@outlook.com", recipientRecipientEntryId.emailAddress)
                XCTAssertEqual("SMTP", details.recipients[0].addressType)
                XCTAssertEqual(Data([0x53, 0x4D, 0x54, 0x50, 0x3A, 0x50, 0x53, 0x54, 0x52, 0x45, 0x41, 0x44, 0x45, 0x52, 0x54, 0x45, 0x53, 0x54, 0x53, 0x40, 0x4F, 0x55, 0x54, 0x4C, 0x4F, 0x4F, 0x4B, 0x2E, 0x43, 0x4F, 0x4D, 0x00]), details.recipients[0].searchKey)
                XCTAssertEqual(.mailUser, details.recipients[0].displayType)
                XCTAssertEqual("pstreadertests@outlook.com", details.recipients[0].smtpAddress)
                XCTAssertEqual("Hugh Bellamy", details.recipients[0].transmittableDisplayName)
                XCTAssertEqual(.mailUser, details.recipients[0].objectType)
                XCTAssertTrue(details.recipients[0].responsibility!)
                XCTAssertEqual(19, details.recipients[0].ltpRowId)
                let recipientEntryId = details.recipients[0].entryId as! OneOffEntryID
                XCTAssertEqual(0, recipientEntryId.flags)
                XCTAssertEqual(UUID(uuidString: "812B1FA4-BEA3-1019-9D6E-00DD010F5402"), recipientEntryId.providerUid)
                XCTAssertEqual("Hugh Bellamy", recipientEntryId.displayName)
                XCTAssertEqual("SMTP", recipientEntryId.addressType)
                XCTAssertEqual("pstreadertests@outlook.com", recipientEntryId.emailAddress)
                XCTAssertFalse(details.recipients[0].sendRichInfo!)
                XCTAssertEqual(Data([0x00, 0x00, 0x00, 0x00, 0x81, 0x2B, 0x1F, 0xA4, 0xBE, 0xA3, 0x10, 0x19, 0x9D, 0x6E, 0x00, 0xDD, 0x01, 0x0F, 0x54, 0x02, 0x00, 0x00, 0x01, 0x80, 0x48, 0x00, 0x75, 0x00, 0x67, 0x00, 0x68, 0x00, 0x20, 0x00, 0x42, 0x00, 0x65, 0x00, 0x6C, 0x00, 0x6C, 0x00, 0x61, 0x00, 0x6D, 0x00, 0x79, 0x00, 0x00, 0x00, 0x53, 0x00, 0x4D, 0x00, 0x54, 0x00, 0x50, 0x00, 0x00, 0x00, 0x70, 0x00, 0x73, 0x00, 0x74, 0x00, 0x72, 0x00, 0x65, 0x00, 0x61, 0x00, 0x64, 0x00, 0x65, 0x00, 0x72, 0x00, 0x74, 0x00, 0x65, 0x00, 0x73, 0x00, 0x74, 0x00, 0x73, 0x00, 0x40, 0x00, 0x6F, 0x00, 0x75, 0x00, 0x74, 0x00, 0x6C, 0x00, 0x6F, 0x00, 0x6F, 0x00, 0x6B, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00]), details.recipients[0].recordKey)
                XCTAssertEqual(.primaryRecipient, details.recipients[0].recipientType)

                XCTAssertEqual(0, messages[0].attachments.count)
                
                XCTAssertEqual(Data([0x01, 0x00, 0x00, 0x00, 0x10, 0x7F, 0x6F, 0x20, 0x1A, 0x95, 0x0D, 0x45, 0x9D, 0x31, 0xE2, 0x5C, 0xD4, 0x07, 0xC0, 0x2F, 0x01, 0x00, 0x00, 0x00]), pst.messageStore!.replVersionHistory)
                XCTAssertEqual(Data([0x43, 0xEE, 0x6C, 0x66, 0xA7, 0x46, 0xEF, 0x44, 0x8E, 0xF7, 0xA3, 0xFB, 0x87, 0xFF, 0x25, 0xE6]), pst.messageStore!.recordKey)
                XCTAssertEqual(0, pst.messageStore!.ipmWastebasketEntryId!.rgbFlags)
                XCTAssertEqual(UUID(uuidString: "43EE6C66-A746-EF44-8EF7-A3FB87FF25E6"), pst.messageStore!.ipmWastebasketEntryId!.uid)
                XCTAssertEqual(0x00008062, pst.messageStore!.ipmWastebasketEntryId!.nid.rawValue)
                XCTAssertEqual("Deleted Items", try pst.getFolder(nid: pst.messageStore!.ipmWastebasketEntryId!.nid).displayName)
                XCTAssertEqual("Deleted Items folder", try pst.getFolder(nid: pst.messageStore!.ipmWastebasketEntryId!.nid).comment)
                XCTAssertEqual(0, pst.messageStore!.ipmSubTreeEntryId!.rgbFlags)
                XCTAssertEqual(UUID(uuidString: "43EE6C66-A746-EF44-8EF7-A3FB87FF25E6"), pst.messageStore!.ipmSubTreeEntryId!.uid)
                XCTAssertEqual("Top of Outlook data file", try pst.getFolder(nid: pst.messageStore!.ipmSubTreeEntryId!.nid).displayName)
                XCTAssertEqual([.ipmSubtreeValid, .ipmWasteBasketValid, .finderValid], pst.messageStore!.validFolderMask)
                XCTAssertEqual(0, pst.messageStore!.finderEntryId!.rgbFlags)
                XCTAssertEqual(UUID(uuidString: "43EE6C66-A746-EF44-8EF7-A3FB87FF25E6"), pst.messageStore!.finderEntryId!.uid)
                XCTAssertEqual("Search Root", try pst.getFolder(nid: pst.messageStore!.finderEntryId!.nid).displayName)
                XCTAssertEqual(0x000E0011, pst.messageStore!.latestPstEnsure)
                XCTAssertEqual(0x00000000, pst.messageStore!.pstPassword)
                XCTAssertTrue(pst.messageStore!.pstLrNoRestrictions!)
                XCTAssertEqual(0, pst.messageStore!.replFlags)
                XCTAssertEqual("Outlook Data File", pst.messageStore!.displayName)
                XCTAssertEqual(0x00189D47, pst.messageStore!.getProperty(id: .unknown0x66FC) as UInt32?)
            }
        }

        do {
            let data = try getData(name: "backup_with_rules")
            let pst = try PstFile(data: data)
            let inboxFolder = pst.rootFolder!["Top of Outlook data file"]!["Inbox"]!
            XCTAssertNotNil(inboxFolder)
        }
        do {
            let data = try getData(name: "aspose-email/Aspose.Email-for-Java/Outlook")
            let pst = try PstFile(data: data)
            XCTAssertNotNil(pst.rootFolder)
        }
        do {
            let data = try getData(name: "aspose-email/Aspose.Email-for-Java/sample")
            let pst = try PstFile(data: data)
            XCTAssertNotNil(pst.rootFolder)
        }
        do {
            let data = try getData(name: "aspose-email/Aspose.Email-for-Java/source")
            let pst = try PstFile(data: data)
            XCTAssertNotNil(pst.rootFolder)
        }
        do {
            let data = try getData(name: "aspose-email/Aspose.Email-for-Java/Sub")
            let pst = try PstFile(data: data)
            XCTAssertNotNil(pst.rootFolder)
        }
        do {
            let data = try getData(name: "aspose-email/Aspose.Email-for-Java/test")
            let pst = try PstFile(data: data)
            XCTAssertNotNil(pst.rootFolder)
        }
    }
    
    func testAnsi() throws {
        do {
            let data = try getData(name: "97_outlook_qwerty12345")
            let pst = try PstFile(data: data)
            
            XCTAssertNotNil(pst.rootFolder)
            XCTAssertEqual(0x00000000, (pst.rootFolder!.ipmAppointmentEntryId as? GeneralEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "D40146F4-A004-C34B-B0DF-2A9DC071B66C"), (pst.rootFolder!.ipmAppointmentEntryId as? GeneralEntryID)!.providerUid)
            XCTAssertEqual([0x22, 0x81, 0x00, 0x00], (pst.rootFolder!.ipmAppointmentEntryId as? GeneralEntryID)!.providerData)
            XCTAssertEqual(0x00000000, (pst.rootFolder!.ipmContactEntryId as? GeneralEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "D40146F4-A004-C34B-B0DF-2A9DC071B66C"), (pst.rootFolder!.ipmContactEntryId as? GeneralEntryID)!.providerUid)
            XCTAssertEqual([0x42, 0x81, 0x00, 0x00], (pst.rootFolder!.ipmContactEntryId as? GeneralEntryID)!.providerData)
            XCTAssertEqual(0, pst.rootFolder!.contentCount!)
            XCTAssertEqual(0x00000000, (pst.rootFolder!.ipmJournalEntryId as? GeneralEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "D40146F4-A004-C34B-B0DF-2A9DC071B66C"), (pst.rootFolder!.ipmJournalEntryId as? GeneralEntryID)!.providerUid)
            XCTAssertEqual([0x62, 0x81, 0x00, 0x00], (pst.rootFolder!.ipmJournalEntryId as? GeneralEntryID)!.providerData)
            XCTAssertEqual(0, pst.rootFolder!.contentUnreadCount!)
            XCTAssertEqual(0x00000000, (pst.rootFolder!.remindersOnlineEntryId as? GeneralEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "D40146F4-A004-C34B-B0DF-2A9DC071B66C"), (pst.rootFolder!.remindersOnlineEntryId as? GeneralEntryID)!.providerUid)
            XCTAssertEqual([0x23, 0x00, 0x08, 0x00], (pst.rootFolder!.remindersOnlineEntryId as? GeneralEntryID)!.providerData)
            XCTAssertTrue(pst.rootFolder!.subfolders!)
            XCTAssertEqual(0x00000000, (pst.rootFolder!.ipmNoteEntryId as? GeneralEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "D40146F4-A004-C34B-B0DF-2A9DC071B66C"), (pst.rootFolder!.ipmNoteEntryId as? GeneralEntryID)!.providerUid)
            XCTAssertEqual([0x82, 0x81, 0x00, 0x00], (pst.rootFolder!.ipmNoteEntryId as? GeneralEntryID)!.providerData)
            XCTAssertEqual("", pst.rootFolder!.displayName!)
            XCTAssertEqual(0x00000000, (pst.rootFolder!.ipmTaskEntryId as? GeneralEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "D40146F4-A004-C34B-B0DF-2A9DC071B66C"), (pst.rootFolder!.ipmTaskEntryId as? GeneralEntryID)!.providerUid)
            XCTAssertEqual([0xA2, 0x81, 0x00, 0x00], (pst.rootFolder!.ipmTaskEntryId as? GeneralEntryID)!.providerData)

            do {
            let messages = try pst.rootFolder!.getMessages()
            XCTAssertEqual(0, messages.count)
            }

            XCTAssertEqual(3, pst.rootFolder!.children.count)
            XCTAssertEqual("", pst.rootFolder!.children[0].comment!)
            XCTAssertEqual("IPM_VIEWS", pst.rootFolder!.children[0].displayName!)
            XCTAssertEqual(0, pst.rootFolder!.children[0].contentUnreadCount!)
            XCTAssertEqual(0, pst.rootFolder!.children[0].contentCount!)
            XCTAssertFalse(pst.rootFolder!.children[0].subfolders!)

            do {
            let messages = try pst.rootFolder!.children[0].getMessages()
            XCTAssertEqual(0, messages.count)
            }

            XCTAssertEqual(0, pst.rootFolder!.children[0].children.count)
            XCTAssertEqual("", pst.rootFolder!.children[1].comment!)
            XCTAssertEqual("Search Root", pst.rootFolder!.children[1].displayName!)
            XCTAssertEqual(0, pst.rootFolder!.children[1].contentUnreadCount!)
            XCTAssertEqual(0, pst.rootFolder!.children[1].contentCount!)
            XCTAssertFalse(pst.rootFolder!.children[1].subfolders!)

            do {
            let messages = try pst.rootFolder!.children[1].getMessages()
            XCTAssertEqual(0, messages.count)
            }

            XCTAssertEqual(0, pst.rootFolder!.children[1].children.count)
            XCTAssertTrue(pst.rootFolder!.children[2].subfolders!)
            XCTAssertEqual(0, pst.rootFolder!.children[2].contentCount!)
            XCTAssertEqual("", pst.rootFolder!.children[2].comment!)
            XCTAssertEqual("Top of Personal Folders", pst.rootFolder!.children[2].displayName!)
            XCTAssertEqual(0, pst.rootFolder!.children[2].contentUnreadCount!)

            do {
            let messages = try pst.rootFolder!.children[2].getMessages()
            XCTAssertEqual(0, messages.count)
            }
        }
    }

    func testOst() throws {
        do {
            let data = try getData(name: "pstreadertests@outlook.com.ost")
            let pst = try PstFile(data: data)
         
            XCTAssertNotNil(pst.rootFolder)
            XCTAssertEqual("", pst.rootFolder!.comment!)
            XCTAssertEqual([.readAny, .create, .editOwned, .deleteOwned, .editAny, .deleteAny, .createSubFolder, .folderOwner, .folderVisible], pst.rootFolder!.rights)
            XCTAssertEqual(1600247518.0, pst.rootFolder!.creationTime!.timeIntervalSince1970)
            XCTAssertFalse((pst.rootFolder!.getProperty(id: .PR_DESIGN_IN_PROGRESS) as Bool?)!)
            XCTAssertEqual([0x46, 0x35, 0x46, 0x56, 0x03, 0x00, 0x00, 0x00, 0x96, 0x00, 0x00, 0x00, 0x6A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x92, 0x01, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x15, 0x34, 0xC5, 0x76, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x17, 0x15, 0x4D, 0x85, 0x00, 0x50, 0x00, 0x2F, 0x6F, 0x3D, 0x46, 0x69, 0x72, 0x73, 0x74, 0x20, 0x4F, 0x72, 0x67, 0x61, 0x6E, 0x69, 0x7A, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x2F, 0x6F, 0x75, 0x3D, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6E, 0x67, 0x65, 0x20, 0x41, 0x64, 0x6D, 0x69, 0x6E, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x20, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x28, 0x46, 0x59, 0x44, 0x49, 0x42, 0x4F, 0x48, 0x46, 0x32, 0x33, 0x53, 0x50, 0x44, 0x4C, 0x54, 0x29, 0x2F, 0x63, 0x6E, 0x3D, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6E, 0x74, 0x73, 0x2F, 0x63, 0x6E, 0x3D, 0x30, 0x30, 0x30, 0x33, 0x37, 0x46, 0x46, 0x45, 0x33, 0x34, 0x35, 0x33, 0x34, 0x43, 0x33, 0x30, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x17, 0x15, 0x4D, 0x85, 0x00, 0x08, 0x42, 0x26, 0x09, 0x01, 0x3F, 0x52, 0x47, 0x4C, 0x01, 0x50, 0x52, 0x59, 0x5C, 0x50, 0x01, 0x17, 0x52, 0xB0, 0xB1, 0x50, 0x50, 0x02, 0x01, 0x37, 0x52, 0x4E, 0x51, 0x52, 0x56, 0x57, 0x50, 0x50, 0x03, 0x09, 0x1E, 0x8C, 0x52, 0x8B, 0x8C, 0x50, 0x50, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x02, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x01, 0x52, 0x09, 0x12, 0x42, 0x1D, 0x08, 0x42, 0x26, 0x09, 0x01, 0x3F, 0x52, 0x47, 0x4C, 0x01, 0x50, 0x52, 0x59, 0x5C, 0x50, 0x01, 0x17, 0x52, 0xB0, 0xB1, 0x50, 0x50, 0x02, 0x01, 0x37, 0x52, 0x4E, 0x51, 0x52, 0x56, 0x57, 0x50, 0x50, 0x03, 0x09, 0x1E, 0x8C, 0x52, 0x8B, 0x8C, 0x50, 0x50, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x02, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x01, 0x52, 0x09, 0x12, 0x42, 0x1D, 0x08, 0x42, 0x26, 0x09, 0x01, 0x3F, 0x52, 0x47, 0x4C, 0x01, 0x50, 0x52, 0x59, 0x5C, 0x50, 0x01, 0x17, 0x52, 0xB0, 0xB1, 0x50, 0x50, 0x02, 0x01, 0x37, 0x52, 0x4E, 0x51, 0x52, 0x56, 0x57, 0x50, 0x50, 0x03, 0x09, 0x1E, 0x8C, 0x52, 0x8B, 0x8C, 0x50, 0x50, 0x00], [UInt8]((pst.rootFolder!.getProperty(id: .unknown0x6614) as Data?)!))
            XCTAssertEqual(0, pst.rootFolder!.contentUnreadCount!)
            XCTAssertEqual(0, pst.rootFolder!.contentCount!)
            XCTAssertFalse((pst.rootFolder!.getProperty(id: .PR_SECURE_ORIGINATION) as Bool?)!)
            XCTAssertTrue(pst.rootFolder!.subfolders!)
            XCTAssertEqual(2, (pst.rootFolder!.getProperty(id: .tagSerializedReplidGuidMapOrPR_FOLDER_CHILD_COUNT) as UInt32?)!)
            XCTAssertEqual("", pst.rootFolder!.displayName!)
            XCTAssertEqual(1600247518.0, pst.rootFolder!.lastModificationTime!.timeIntervalSince1970)

            do {
            let associatedContents = try pst.rootFolder!.getAssociatedContents()
            XCTAssertEqual(0, associatedContents.count)
            }

            do {
            let messages = try pst.rootFolder!.getMessages()
            XCTAssertEqual(0, messages.count)
            }

            XCTAssertEqual(2, pst.rootFolder!.children.count)
            XCTAssertEqual(360287970189639680, (pst.rootFolder!.children[0].getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual("", pst.rootFolder!.children[0].comment!)
            XCTAssertEqual([.readAny], pst.rootFolder!.children[0].rights)
            XCTAssertEqual(1600247518.0, pst.rootFolder!.children[0].lastModificationTime!.timeIntervalSince1970)
            XCTAssertFalse((pst.rootFolder!.children[0].getProperty(id: .PR_DESIGN_IN_PROGRESS) as Bool?)!)
            XCTAssertEqual(0, pst.rootFolder!.children[0].contentUnreadCount!)
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), pst.rootFolder!.children[0].changeKey!.namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x06], pst.rootFolder!.children[0].changeKey!.localId)
            XCTAssertEqual(1600247518.0, pst.rootFolder!.children[0].creationTime!.timeIntervalSince1970)
            XCTAssertTrue(pst.rootFolder!.children[0].subfolders!)
            XCTAssertFalse((pst.rootFolder!.children[0].getProperty(id: .PR_SECURE_ORIGINATION) as Bool?)!)
            XCTAssertEqual(0, pst.rootFolder!.children[0].contentCount!)
            XCTAssertEqual("Root - Mailbox", pst.rootFolder!.children[0].displayName!)
            XCTAssertEqual(10, (pst.rootFolder!.children[0].getProperty(id: .tagSerializedReplidGuidMapOrPR_FOLDER_CHILD_COUNT) as UInt32?)!)
            XCTAssertEqual(1, pst.rootFolder!.children[0].predecessorChangeList!.values.count)
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), pst.rootFolder!.children[0].predecessorChangeList!.values[0].namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x06], pst.rootFolder!.children[0].predecessorChangeList!.values[0].localId)

            do {
            let associatedContents = try pst.rootFolder!.children[0].getAssociatedContents()
            XCTAssertEqual(0, associatedContents.count)
            }

            do {
            let messages = try pst.rootFolder!.children[0].getMessages()
            XCTAssertEqual(0, messages.count)
            }

            XCTAssertEqual(8, pst.rootFolder!.children[0].children.count)
            XCTAssertEqual(1, (pst.rootFolder!.children[0].children[0].getProperty(id: .unknown0x7C0F) as UInt32?)!)
            XCTAssertEqual(1600247518.0, pst.rootFolder!.children[0].children[0].lastModificationTime!.timeIntervalSince1970)
            XCTAssertEqual("", pst.rootFolder!.children[0].children[0].comment!)
            XCTAssertEqual("Common Views", pst.rootFolder!.children[0].children[0].displayName!)
            XCTAssertEqual([.readAny, .create, .editOwned, .deleteOwned, .editAny, .deleteAny, .createSubFolder, .folderOwner, .folderVisible], pst.rootFolder!.children[0].children[0].rights)
            XCTAssertEqual(508, (pst.rootFolder!.children[0].children[0].getProperty(id: .tagNonIpmSubtreeEntryId) as UInt32?)!)
            XCTAssertEqual(5, (pst.rootFolder!.children[0].children[0].getProperty(id: .unknown0x67E2) as UInt32?)!)
            XCTAssertEqual(1, pst.rootFolder!.children[0].children[0].predecessorChangeList!.values.count)
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), pst.rootFolder!.children[0].children[0].predecessorChangeList!.values[0].namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x07], pst.rootFolder!.children[0].children[0].predecessorChangeList!.values[0].localId)
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), pst.rootFolder!.children[0].children[0].changeKey!.namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x07], pst.rootFolder!.children[0].children[0].changeKey!.localId)
            XCTAssertEqual(0, pst.rootFolder!.children[0].children[0].contentUnreadCount!)
            XCTAssertEqual(1600247518.0, pst.rootFolder!.children[0].children[0].creationTime!.timeIntervalSince1970)
            XCTAssertEqual(0, pst.rootFolder!.children[0].children[0].contentCount!)
            XCTAssertEqual(432345564227567616, (pst.rootFolder!.children[0].children[0].getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual(0, (pst.rootFolder!.children[0].children[0].getProperty(id: .tagSerializedReplidGuidMapOrPR_FOLDER_CHILD_COUNT) as UInt32?)!)
            XCTAssertEqual(3641832505, (pst.rootFolder!.children[0].children[0].getProperty(id: .unknown0x7C0E) as UInt32?)!)
            XCTAssertEqual([0x46, 0x35, 0x46, 0x56, 0x03, 0x00, 0x00, 0x00, 0xA4, 0x00, 0x00, 0x00, 0x6A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x01, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x62, 0x01, 0x00, 0x00, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x0A, 0xFD, 0x60, 0xA8, 0x00, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDE, 0x54, 0x07, 0xBB, 0x26, 0x7F, 0x08, 0x4D, 0x93, 0x2F, 0xFE, 0x7A, 0x9D, 0x22, 0xF8, 0xBD, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x09, 0x1C, 0x76, 0x82, 0x00, 0x05, 0x00, 0x00, 0x09, 0x1E, 0xAA, 0x52, 0x0B, 0x0E, 0x50, 0x00, 0x00, 0x01, 0x00, 0x2F, 0x6F, 0x3D, 0x46, 0x69, 0x72, 0x73, 0x74, 0x20, 0x4F, 0x72, 0x67, 0x61, 0x6E, 0x69, 0x7A, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x2F, 0x6F, 0x75, 0x3D, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6E, 0x67, 0x65, 0x20, 0x41, 0x64, 0x6D, 0x69, 0x6E, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x20, 0x47, 0x72, 0x6F, 0x75, 0x70, 0x28, 0x46, 0x59, 0x44, 0x49, 0x42, 0x4F, 0x48, 0x46, 0x32, 0x33, 0x53, 0x50, 0x44, 0x4C, 0x54, 0x29, 0x2F, 0x63, 0x6E, 0x3D, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6E, 0x74, 0x73, 0x2F, 0x63, 0x6E, 0x3D, 0x30, 0x30, 0x30, 0x33, 0x37, 0x46, 0x46, 0x45, 0x33, 0x34, 0x35, 0x33, 0x34, 0x43, 0x33, 0x30, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x09, 0x1C, 0x76, 0x82, 0x00, 0xDE, 0x54, 0x07, 0xBB, 0x26, 0x7F, 0x08, 0x4D, 0x93, 0x2F, 0xFE, 0x7A, 0x9D, 0x22, 0xF8, 0xBD, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x0A, 0xFD, 0x60, 0xA8, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x02, 0x00, 0x00, 0x01, 0x00, 0x02, 0x00, 0x29, 0x42, 0xB0, 0x05, 0x50, 0x02, 0x01, 0x5F, 0x52, 0x1E, 0x20, 0x50, 0x50, 0x03, 0x09, 0x1E, 0xAA, 0x52, 0x0B, 0x0E, 0x50, 0x50, 0x00, 0x1E, 0xAA, 0x52, 0x0B, 0x0E, 0x50, 0x50, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x02, 0x00, 0x00, 0x01, 0x00, 0x02, 0x00, 0x29, 0x42, 0xB0, 0x05, 0x50, 0x02, 0x01, 0x5F, 0x52, 0x1E, 0x20, 0x50, 0x50, 0x03, 0x09, 0x1E, 0xAA, 0x52, 0x0B, 0x0E, 0x50, 0x50, 0x00, 0x4C, 0x01, 0x55, 0x50, 0x50, 0x00, 0x09, 0x1E, 0xAA, 0x0B, 0x09, 0x1E, 0xAA, 0x0E, 0x50, 0x00], [UInt8]((pst.rootFolder!.children[0].children[0].getProperty(id: .unknown0x6614) as Data?)!))
            XCTAssertEqual(12981907400872165377, (pst.rootFolder!.children[0].children[0].getProperty(id: .PR_IPM_DAF_ENTRYID) as UInt64?)!)
            XCTAssertFalse((pst.rootFolder!.children[0].children[0].getProperty(id: .PR_SECURE_ORIGINATION) as Bool?)!)
            XCTAssertFalse(pst.rootFolder!.children[0].children[0].subfolders!)
            XCTAssertFalse((pst.rootFolder!.children[0].children[0].getProperty(id: .PR_DESIGN_IN_PROGRESS) as Bool?)!)

            do {
            let associatedContents = try pst.rootFolder!.children[0].children[0].getAssociatedContents()
            XCTAssertEqual(10, associatedContents.count)
            XCTAssertEqual(0x09B9D9CB, associatedContents[0].wlinkSaveStamp!)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), associatedContents[0].changeKey!.namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x08, 0x37], associatedContents[0].changeKey!.localId)
            XCTAssertEqual(.groupHeaderShortcut, associatedContents[0].wlinkType!)
            XCTAssertEqual([.read, .unsent, .fai], associatedContents[0].messageFlags)
            XCTAssertEqual(21065, (associatedContents[0].getProperty(id: .PR_GW_MTSIN_ENTRYID) as UInt64?)!)
            XCTAssertEqual(UUID(uuidString: "0006F0B8-0000-0000-C000-000000000046"), associatedContents[0].wlinkGroupHeaderID!)
            XCTAssertEqual(1, associatedContents[0].predecessorChangeList!.values.count)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), associatedContents[0].predecessorChangeList!.values[0].namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x08, 0x37], associatedContents[0].predecessorChangeList!.values[0].localId)
            XCTAssertEqual("\u{01}\u{01}Other Calendars", associatedContents[0].subject!)
            XCTAssertEqual([], associatedContents[0].messageStatus)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", associatedContents[0].messageClass!)
            XCTAssertEqual(1801, associatedContents[0].ltpRowVer!)
            XCTAssertEqual(0x001002C8, associatedContents[0].ltpRowId!)
            XCTAssertEqual(CLSID_CalendarFolder, associatedContents[0].wlinkFolderType!)
            XCTAssertEqual([], associatedContents[0].wlinkFlags)
            XCTAssertEqual([0xBF], [UInt8](associatedContents[0].wlinkOrdinal!))
            XCTAssertEqual(1600275057.0, associatedContents[0].lastModificationTime!.timeIntervalSince1970)
            XCTAssertEqual(.calendar, associatedContents[0].wlinkSection!)
            XCTAssertEqual(0, (associatedContents[0].getProperty(id: .unknown0x6612) as UInt32?)!)
            XCTAssertEqual(2332584231512834049, (associatedContents[0].getProperty(id: .unknown0x67F4) as UInt64?)!)

            XCTAssertEqual(0, associatedContents[0].attachments.count)
            XCTAssertEqual(0, associatedContents[0].recipients.count)

            do {
            let messageDetails = try associatedContents[0].getMessageDetails()
            XCTAssertEqual("pstreadertests@outlook.com", (messageDetails.getProperty(id: .unknown0x5D0A) as String?)!)
            XCTAssertEqual(.undefined, messageDetails.nativeBody!)
            XCTAssertEqual(0x01, messageDetails.conversationIndex!.header.reserved)
            XCTAssertEqual(518316612552.0, messageDetails.conversationIndex!.header.currentFileTime.timeIntervalSince1970)
            XCTAssertEqual(UUID(uuidString: "EAEDEEF7-80F0-7440-A455-E16F5E84EE2A"), messageDetails.conversationIndex!.header.guid)
            XCTAssertEqual(0, messageDetails.conversationIndex!.responseLevels.count)
            XCTAssertEqual("EX", (messageDetails.getProperty(id: .unknown0x4024) as String?)!)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30", messageDetails.creatorEmailAddress!)
            XCTAssertEqual([], messageDetails.wlinkFlags)
            XCTAssertEqual(.groupHeaderShortcut, messageDetails.wlinkType!)
            XCTAssertTrue((messageDetails.getProperty(id: .unknown0x36FA) as Bool?)!)
            XCTAssertEqual([0xFE, 0x7F, 0x03, 0x00, 0x53, 0x34, 0x30, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((messageDetails.getProperty(id: .unknown0x0E4B) as Data?)!))
            XCTAssertFalse(messageDetails.nonReceiptNotificationRequested!)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30", (messageDetails.getProperty(id: .unknown0x4025) as String?)!)
            XCTAssertEqual([0xFE, 0x7F, 0x03, 0x00, 0x53, 0x34, 0x30, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((messageDetails.getProperty(id: .unknown0x0E4C) as Data?)!))
            XCTAssertEqual("Hugh Bellamy", messageDetails.lastModifierSimpleDisplayName!)
            XCTAssertEqual(1600275057.0, messageDetails.messageDeliveryTime!.timeIntervalSince1970)
            XCTAssertFalse((messageDetails.getProperty(id: .unknown0x0ECD) as Bool?)!)
            XCTAssertEqual(21043, (messageDetails.getProperty(id: .unknown0x6743) as UInt64?)!)
            XCTAssertEqual("Hugh Bellamy", messageDetails.creatorSimpleDisplayName!)
            XCTAssertEqual(0x00000000, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.providerUid)
            XCTAssertEqual(0x00000001, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.version)
            XCTAssertEqual(.localMailUser, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.type)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30\u{00}", (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.x500DN)
            XCTAssertEqual([.read, .unsent, .fai], messageDetails.messageFlags)
            XCTAssertEqual(CLSID_CalendarFolder, messageDetails.wlinkFolderType!)
            XCTAssertEqual(2, (messageDetails.getProperty(id: .unknown0x365A) as UInt32?)!)
            XCTAssertFalse(messageDetails.readReceiptRequested!)
            XCTAssertEqual(2332584231512834049, (messageDetails.getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual(20127, messageDetails.internetCodepage!)
            XCTAssertEqual([0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0xFE, 0x7F, 0x03, 0x00, 0x30, 0x4C, 0x53, 0x34], [UInt8]((messageDetails.getProperty(id: .PR_LAST_MODIFIER_SID) as Data?)!))
            XCTAssertFalse(messageDetails.smartNoAttach!)
            XCTAssertEqual("pstreadertests@outlook.com", (messageDetails.getProperty(id: .unknown0x5D0B) as String?)!)
            XCTAssertEqual(0x09B9D9CB, messageDetails.wlinkSaveStamp!)
            XCTAssertEqual([0x19, 0x77, 0x9C, 0xF2, 0x9C, 0x28, 0x2F, 0x47, 0xB6, 0xAE, 0xA5, 0x3E, 0x34, 0x16, 0x8A, 0x9D], [UInt8](messageDetails.searchKey!))
            XCTAssertEqual(0, (messageDetails.getProperty(id: .PR_MODIFIER_FLAG) as UInt32?)!)
            XCTAssertEqual(.normal, messageDetails.sensitivity!)
            XCTAssertEqual([0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0xFE, 0x7F, 0x03, 0x00, 0x30, 0x4C, 0x53, 0x34], [UInt8]((messageDetails.getProperty(id: .PR_CREATOR_SID) as Data?)!))
            XCTAssertEqual(.calendar, messageDetails.wlinkSection!)
            XCTAssertEqual(.normal, messageDetails.priority!)
            XCTAssertEqual("\u{01}\u{01}Other Calendars", messageDetails.subject!)
            XCTAssertEqual(0x000006EC, messageDetails.messageSize!)
            XCTAssertEqual([0xBF], [UInt8](messageDetails.wlinkOrdinal!))
            XCTAssertEqual(1600275057.0, (messageDetails.getProperty(id: .unknown0x0F02) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual(1600275057.0, messageDetails.creationTime!.timeIntervalSince1970)
            XCTAssertEqual("Other Calendars", messageDetails.conversationTopic!)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", messageDetails.messageClass!)
            XCTAssertEqual("Hugh Bellamy", messageDetails.lastModifierName!)
            XCTAssertEqual(1600275057.0, (messageDetails.getProperty(id: .unknown0x0F0A) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual(0, (messageDetails.getProperty(id: .unknown0x1213) as UInt32?)!)
            XCTAssertEqual(1033, messageDetails.messageLocaleId!)
            XCTAssertEqual(1600275057.0, messageDetails.clientSubmitTime!.timeIntervalSince1970)
            XCTAssertEqual(.normal, messageDetails.importance!)
            XCTAssertEqual("EX", messageDetails.creatorAddressType!)
            XCTAssertEqual(3, (messageDetails.getProperty(id: .tagInternetArticleNumber) as UInt32?)!)
            XCTAssertEqual(1, (messageDetails.getProperty(id: .unknown0x5037) as UInt32?)!)
            XCTAssertEqual(3, (messageDetails.getProperty(id: .unknown0x0E2F) as UInt32?)!)
            XCTAssertEqual(1252, messageDetails.messageCodepage!)
            XCTAssertEqual("Common Views", (messageDetails.getProperty(id: .tagParentDisplay) as String?)!)
            XCTAssertEqual(0, (messageDetails.getProperty(id: .PR_CREATOR_FLAG) as UInt32?)!)
            XCTAssertEqual("<LNXP123MB3820335594EC88A283717422CB210@LNXP123MB3820.GBRP123.PROD.OUTLOOK.COM>", (messageDetails.getProperty(id: .tagInternetMessageId) as String?)!)
            XCTAssertEqual(UUID(uuidString: "0006F0B8-0000-0000-C000-000000000046"), messageDetails.wlinkGroupHeaderID!)

            XCTAssertEqual(0, messageDetails.attachments.count)
            XCTAssertEqual(0, messageDetails.recipients.count)

            }
            XCTAssertEqual(1600275057.0, associatedContents[1].lastModificationTime!.timeIntervalSince1970)
            XCTAssertEqual(UUID(uuidString: "0006F0B7-0000-0000-C000-000000000046"), associatedContents[1].wlinkGroupClsid!)
            XCTAssertEqual(21117, (associatedContents[1].getProperty(id: .PR_GW_MTSIN_ENTRYID) as UInt64?)!)
            XCTAssertEqual([], associatedContents[1].messageStatus)
            XCTAssertEqual([0x7F], [UInt8](associatedContents[1].wlinkOrdinal!))
            XCTAssertEqual([WlinkFlags(rawValue: 0x00100000)], associatedContents[1].wlinkFlags)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0xCB, 0xB8, 0x94, 0x67, 0xE6, 0x06, 0x42, 0x48, 0xA8, 0x20, 0x9C, 0xC1, 0xE3, 0xB9, 0xA1, 0x28, 0x01, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0D, 0x00, 0x00], [UInt8](associatedContents[1].wlinkRecordKey!))
            XCTAssertEqual(0x00000000, (associatedContents[1].wlinkStoreEntryId as? StoreObjectEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "38A1BB10-05E5-101A-A1BB-08002B2A56C2"), (associatedContents[1].wlinkStoreEntryId as? StoreObjectEntryID)!.providerUid)
            XCTAssertEqual(0x00, (associatedContents[1].wlinkStoreEntryId as? StoreObjectEntryID)!.version)
            XCTAssertEqual(0x00, (associatedContents[1].wlinkStoreEntryId as? StoreObjectEntryID)!.flag)
            XCTAssertEqual("EMSMDB.DLL\u{00}\u{00}\u{00}\u{00}", (associatedContents[1].wlinkStoreEntryId as? StoreObjectEntryID)!.dllFileName)
            XCTAssertEqual(0x00000000, (associatedContents[1].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedFlags)
            XCTAssertEqual(UUID(uuidString: "1B55FA20-AA66-11CD-9BC8-00AA002FC45A"), (associatedContents[1].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedProviderUid)
            XCTAssertEqual([.homeLogon, .takeOwnership], (associatedContents[1].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedType)
            XCTAssertEqual("LNXP123MB3820\u{00}", (associatedContents[1].wlinkStoreEntryId as? StoreObjectEntryID)!.serverShortName)
            XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (associatedContents[1].wlinkStoreEntryId as? StoreObjectEntryID)!.mailboxDN)
            XCTAssertNil((associatedContents[1].wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV2)
            XCTAssertNil((associatedContents[1].wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3)
            XCTAssertEqual(0x001002E8, associatedContents[1].ltpRowId!)
            XCTAssertEqual(CLSID_CalendarFolder, associatedContents[1].wlinkFolderType!)
            XCTAssertEqual(0x0F30B50E, associatedContents[1].wlinkSaveStamp!)
            XCTAssertEqual("\u{01}\u{01}Calendar", associatedContents[1].subject!)
            XCTAssertEqual([.read, .unsent, .fai], associatedContents[1].messageFlags)
            XCTAssertEqual("My Calendars", associatedContents[1].wlinkGroupName!)
            XCTAssertEqual(.calendar, associatedContents[1].wlinkSection!)
            XCTAssertEqual(1, associatedContents[1].predecessorChangeList!.values.count)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), associatedContents[1].predecessorChangeList!.values[0].namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x08, 0x36], associatedContents[1].predecessorChangeList!.values[0].localId)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", associatedContents[1].messageClass!)
            XCTAssertEqual(.normalFolder, associatedContents[1].wlinkType!)
            XCTAssertEqual(0x00000000, (associatedContents[1].wlinkEntryId as? FolderEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "CBB89467-E606-4248-A820-9CC1E3B9A128"), (associatedContents[1].wlinkEntryId as? FolderEntryID)!.providerUid)
            XCTAssertEqual(.privateFolder, (associatedContents[1].wlinkEntryId as? FolderEntryID)!.folderType)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), (associatedContents[1].wlinkEntryId as? FolderEntryID)!.databaseGuid)
            XCTAssertEqual(3660274208866304, (associatedContents[1].wlinkEntryId as? FolderEntryID)!.globalCounter)
            XCTAssertEqual(0x0000, (associatedContents[1].wlinkEntryId as? FolderEntryID)!.pad)
            XCTAssertEqual(0, (associatedContents[1].getProperty(id: .unknown0x6612) as UInt32?)!)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), associatedContents[1].changeKey!.namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x08, 0x36], associatedContents[1].changeKey!.localId)
            XCTAssertEqual(1802, associatedContents[1].ltpRowVer!)
            XCTAssertEqual(-1, associatedContents[1].wlinkCalendarColor!)
            XCTAssertEqual(2260526637474906113, (associatedContents[1].getProperty(id: .unknown0x67F4) as UInt64?)!)

            XCTAssertEqual(0, associatedContents[1].attachments.count)
            XCTAssertEqual(0, associatedContents[1].recipients.count)

            do {
            let messageDetails = try associatedContents[1].getMessageDetails()
            XCTAssertEqual(1600275057.0, messageDetails.creationTime!.timeIntervalSince1970)
            XCTAssertEqual("Hugh Bellamy", messageDetails.lastModifierName!)
            XCTAssertEqual(0x0F30B50E, messageDetails.wlinkSaveStamp!)
            XCTAssertEqual([.read, .unsent, .fai], messageDetails.messageFlags)
            XCTAssertEqual(1600275057.0, messageDetails.clientSubmitTime!.timeIntervalSince1970)
            XCTAssertEqual("My Calendars", messageDetails.wlinkGroupName!)
            XCTAssertEqual(0, (messageDetails.getProperty(id: .PR_CREATOR_FLAG) as UInt32?)!)
            XCTAssertEqual("pstreadertests@outlook.com", (messageDetails.getProperty(id: .unknown0x5D0A) as String?)!)
            XCTAssertEqual(.normal, messageDetails.importance!)
            XCTAssertFalse((messageDetails.getProperty(id: .unknown0x0ECD) as Bool?)!)
            XCTAssertEqual(2, (messageDetails.getProperty(id: .unknown0x0E2F) as UInt32?)!)
            XCTAssertEqual(2, (messageDetails.getProperty(id: .tagInternetArticleNumber) as UInt32?)!)
            XCTAssertEqual(CLSID_CalendarFolder, messageDetails.wlinkFolderType!)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0xCB, 0xB8, 0x94, 0x67, 0xE6, 0x06, 0x42, 0x48, 0xA8, 0x20, 0x9C, 0xC1, 0xE3, 0xB9, 0xA1, 0x28, 0x01, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0D, 0x00, 0x00], [UInt8](messageDetails.wlinkRecordKey!))
            XCTAssertEqual(0x01, messageDetails.conversationIndex!.header.reserved)
            XCTAssertEqual(518316612552.0, messageDetails.conversationIndex!.header.currentFileTime.timeIntervalSince1970)
            XCTAssertEqual(UUID(uuidString: "04CB9128-BC1B-8F4E-A7BC-0532F20B90EA"), messageDetails.conversationIndex!.header.guid)
            XCTAssertEqual(0, messageDetails.conversationIndex!.responseLevels.count)
            XCTAssertEqual([0x44, 0x2C, 0xBE, 0x7C, 0xDF, 0x06, 0x2C, 0x4D, 0x9B, 0xFA, 0x6C, 0x05, 0x0B, 0x24, 0xD2, 0xF0], [UInt8](messageDetails.searchKey!))
            XCTAssertEqual("<LNXP123MB38205000DFA8028A43EC2616CB210@LNXP123MB3820.GBRP123.PROD.OUTLOOK.COM>", (messageDetails.getProperty(id: .tagInternetMessageId) as String?)!)
            XCTAssertEqual("\u{01}\u{01}Calendar", messageDetails.subject!)
            XCTAssertEqual("pstreadertests@outlook.com", (messageDetails.getProperty(id: .unknown0x5D0B) as String?)!)
            XCTAssertEqual("Hugh Bellamy", messageDetails.creatorSimpleDisplayName!)
            XCTAssertEqual(.calendar, messageDetails.wlinkSection!)
            XCTAssertEqual("Calendar", messageDetails.conversationTopic!)
            XCTAssertEqual([0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0xFE, 0x7F, 0x03, 0x00, 0x30, 0x4C, 0x53, 0x34], [UInt8]((messageDetails.getProperty(id: .PR_LAST_MODIFIER_SID) as Data?)!))
            XCTAssertEqual(0, (messageDetails.getProperty(id: .unknown0x1213) as UInt32?)!)
            XCTAssertEqual(1600275057.0, (messageDetails.getProperty(id: .unknown0x0F0A) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "38A1BB10-05E5-101A-A1BB-08002B2A56C2"), (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.providerUid)
            XCTAssertEqual(0x00, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.version)
            XCTAssertEqual(0x00, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.flag)
            XCTAssertEqual("EMSMDB.DLL\u{00}\u{00}\u{00}\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.dllFileName)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedFlags)
            XCTAssertEqual(UUID(uuidString: "1B55FA20-AA66-11CD-9BC8-00AA002FC45A"), (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedProviderUid)
            XCTAssertEqual([.homeLogon, .takeOwnership], (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedType)
            XCTAssertEqual("LNXP123MB3820\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.serverShortName)
            XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.mailboxDN)
            XCTAssertNil((messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV2)
            XCTAssertNil((messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3)
            XCTAssertEqual(2260526637474906113, (messageDetails.getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual(2, (messageDetails.getProperty(id: .unknown0x365A) as UInt32?)!)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkEntryId as? FolderEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "CBB89467-E606-4248-A820-9CC1E3B9A128"), (messageDetails.wlinkEntryId as? FolderEntryID)!.providerUid)
            XCTAssertEqual(.privateFolder, (messageDetails.wlinkEntryId as? FolderEntryID)!.folderType)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), (messageDetails.wlinkEntryId as? FolderEntryID)!.databaseGuid)
            XCTAssertEqual(3660274208866304, (messageDetails.wlinkEntryId as? FolderEntryID)!.globalCounter)
            XCTAssertEqual(0x0000, (messageDetails.wlinkEntryId as? FolderEntryID)!.pad)
            XCTAssertEqual(-1, messageDetails.wlinkCalendarColor!)
            XCTAssertEqual(0, (messageDetails.getProperty(guid: UUID(uuidString: "58B6F260-0251-4293-9737-2EF23187F89D")!, name: "NavigationNodeCalendarArgbColor") as UInt32?)!)
            XCTAssertEqual(21043, (messageDetails.getProperty(id: .unknown0x6743) as UInt64?)!)
            XCTAssertEqual("EX", messageDetails.creatorAddressType!)
            XCTAssertFalse(messageDetails.smartNoAttach!)
            XCTAssertEqual(.undefined, messageDetails.nativeBody!)
            XCTAssertEqual([0x7F], [UInt8](messageDetails.wlinkOrdinal!))
            XCTAssertEqual(.normal, messageDetails.sensitivity!)
            XCTAssertEqual([0xFE, 0x7F, 0x03, 0x00, 0x53, 0x34, 0x30, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((messageDetails.getProperty(id: .unknown0x0E4C) as Data?)!))
            XCTAssertFalse(messageDetails.nonReceiptNotificationRequested!)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30", messageDetails.creatorEmailAddress!)
            XCTAssertEqual([0xFE, 0x7F, 0x03, 0x00, 0x53, 0x34, 0x30, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((messageDetails.getProperty(id: .unknown0x0E4B) as Data?)!))
            XCTAssertEqual("Common Views", (messageDetails.getProperty(id: .tagParentDisplay) as String?)!)
            XCTAssertEqual(0x00000830, messageDetails.messageSize!)
            XCTAssertEqual([0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0xFE, 0x7F, 0x03, 0x00, 0x30, 0x4C, 0x53, 0x34], [UInt8]((messageDetails.getProperty(id: .PR_CREATOR_SID) as Data?)!))
            XCTAssertEqual(1, (messageDetails.getProperty(id: .unknown0x5037) as UInt32?)!)
            XCTAssertEqual(.normal, messageDetails.priority!)
            XCTAssertEqual(UUID(uuidString: "0006F0B7-0000-0000-C000-000000000046"), messageDetails.wlinkGroupClsid!)
            XCTAssertTrue((messageDetails.getProperty(id: .unknown0x36FA) as Bool?)!)
            XCTAssertEqual(1600275057.0, messageDetails.messageDeliveryTime!.timeIntervalSince1970)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30", (messageDetails.getProperty(id: .unknown0x4025) as String?)!)
            XCTAssertEqual([WlinkFlags(rawValue: 0x00100000)], messageDetails.wlinkFlags)
            XCTAssertEqual(.normalFolder, messageDetails.wlinkType!)
            XCTAssertEqual(0, (messageDetails.getProperty(id: .PR_MODIFIER_FLAG) as UInt32?)!)
            XCTAssertEqual(1033, messageDetails.messageLocaleId!)
            XCTAssertEqual("EX", (messageDetails.getProperty(id: .unknown0x4024) as String?)!)
            XCTAssertEqual(20127, messageDetails.internetCodepage!)
            XCTAssertEqual(1600275057.0, (messageDetails.getProperty(id: .unknown0x0F02) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", messageDetails.messageClass!)
            XCTAssertFalse(messageDetails.readReceiptRequested!)
            XCTAssertEqual("Hugh Bellamy", messageDetails.lastModifierSimpleDisplayName!)
            XCTAssertEqual(1252, messageDetails.messageCodepage!)
            XCTAssertEqual(0x00000000, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.providerUid)
            XCTAssertEqual(0x00000001, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.version)
            XCTAssertEqual(.localMailUser, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.type)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30\u{00}", (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.x500DN)

            XCTAssertEqual(0, messageDetails.attachments.count)
            XCTAssertEqual(0, messageDetails.recipients.count)

            }
            XCTAssertEqual(.calendar, associatedContents[2].wlinkSection!)
            XCTAssertEqual([.read, .unsent, .fai], associatedContents[2].messageFlags)
            XCTAssertEqual(UUID(uuidString: "0006F0B7-0000-0000-C000-000000000046"), associatedContents[2].wlinkGroupHeaderID!)
            XCTAssertEqual(.groupHeaderShortcut, associatedContents[2].wlinkType!)
            XCTAssertEqual(2188469043436978177, (associatedContents[2].getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual(0x6E68347A, associatedContents[2].wlinkSaveStamp!)
            XCTAssertEqual(CLSID_CalendarFolder, associatedContents[2].wlinkFolderType!)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), associatedContents[2].changeKey!.namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x08, 0x35], associatedContents[2].changeKey!.localId)
            XCTAssertEqual(21141, (associatedContents[2].getProperty(id: .PR_GW_MTSIN_ENTRYID) as UInt64?)!)
            XCTAssertEqual("\u{01}\u{01}My Calendars", associatedContents[2].subject!)
            XCTAssertEqual([], associatedContents[2].wlinkFlags)
            XCTAssertEqual([0x7F], [UInt8](associatedContents[2].wlinkOrdinal!))
            XCTAssertEqual(1600275057.0, associatedContents[2].lastModificationTime!.timeIntervalSince1970)
            XCTAssertEqual(0x00100308, associatedContents[2].ltpRowId!)
            XCTAssertEqual(1803, associatedContents[2].ltpRowVer!)
            XCTAssertEqual(0, (associatedContents[2].getProperty(id: .unknown0x6612) as UInt32?)!)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", associatedContents[2].messageClass!)
            XCTAssertEqual([], associatedContents[2].messageStatus)
            XCTAssertEqual(1, associatedContents[2].predecessorChangeList!.values.count)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), associatedContents[2].predecessorChangeList!.values[0].namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x08, 0x35], associatedContents[2].predecessorChangeList!.values[0].localId)

            XCTAssertEqual(0, associatedContents[2].attachments.count)
            XCTAssertEqual(0, associatedContents[2].recipients.count)

            do {
            let messageDetails = try associatedContents[2].getMessageDetails()
            XCTAssertFalse(messageDetails.smartNoAttach!)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", messageDetails.messageClass!)
            XCTAssertEqual(1600275057.0, (messageDetails.getProperty(id: .unknown0x0F02) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual(1600275057.0, messageDetails.clientSubmitTime!.timeIntervalSince1970)
            XCTAssertEqual(0, (messageDetails.getProperty(id: .PR_CREATOR_FLAG) as UInt32?)!)
            XCTAssertEqual("pstreadertests@outlook.com", (messageDetails.getProperty(id: .unknown0x5D0B) as String?)!)
            XCTAssertEqual(.normal, messageDetails.importance!)
            XCTAssertEqual(.normal, messageDetails.priority!)
            XCTAssertEqual([], messageDetails.wlinkFlags)
            XCTAssertEqual(0, (messageDetails.getProperty(id: .PR_MODIFIER_FLAG) as UInt32?)!)
            XCTAssertEqual([0x7F], [UInt8](messageDetails.wlinkOrdinal!))
            XCTAssertTrue((messageDetails.getProperty(id: .unknown0x36FA) as Bool?)!)
            XCTAssertEqual(1600275057.0, messageDetails.creationTime!.timeIntervalSince1970)
            XCTAssertEqual(.calendar, messageDetails.wlinkSection!)
            XCTAssertEqual(0x00000000, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.providerUid)
            XCTAssertEqual(0x00000001, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.version)
            XCTAssertEqual(.localMailUser, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.type)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30\u{00}", (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.x500DN)
            XCTAssertEqual("Hugh Bellamy", messageDetails.creatorSimpleDisplayName!)
            XCTAssertEqual(.undefined, messageDetails.nativeBody!)
            XCTAssertEqual(1, (messageDetails.getProperty(id: .unknown0x0E2F) as UInt32?)!)
            XCTAssertEqual("Hugh Bellamy", messageDetails.lastModifierSimpleDisplayName!)
            XCTAssertEqual([0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0xFE, 0x7F, 0x03, 0x00, 0x30, 0x4C, 0x53, 0x34], [UInt8]((messageDetails.getProperty(id: .PR_LAST_MODIFIER_SID) as Data?)!))
            XCTAssertEqual(0, (messageDetails.getProperty(id: .unknown0x1213) as UInt32?)!)
            XCTAssertEqual(UUID(uuidString: "0006F0B7-0000-0000-C000-000000000046"), messageDetails.wlinkGroupHeaderID!)
            XCTAssertEqual(1, (messageDetails.getProperty(id: .unknown0x5037) as UInt32?)!)
            XCTAssertEqual(2188469043436978177, (messageDetails.getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual("EX", messageDetails.creatorAddressType!)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30", messageDetails.creatorEmailAddress!)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30", (messageDetails.getProperty(id: .unknown0x4025) as String?)!)
            XCTAssertEqual(1033, messageDetails.messageLocaleId!)
            XCTAssertEqual(1, (messageDetails.getProperty(id: .tagInternetArticleNumber) as UInt32?)!)
            XCTAssertEqual([0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0xFE, 0x7F, 0x03, 0x00, 0x30, 0x4C, 0x53, 0x34], [UInt8]((messageDetails.getProperty(id: .PR_CREATOR_SID) as Data?)!))
            XCTAssertEqual(0x000006E0, messageDetails.messageSize!)
            XCTAssertEqual("<LNXP123MB38209FF1B6F53FD5B95056FFCB210@LNXP123MB3820.GBRP123.PROD.OUTLOOK.COM>", (messageDetails.getProperty(id: .tagInternetMessageId) as String?)!)
            XCTAssertFalse(messageDetails.readReceiptRequested!)
            XCTAssertEqual(1252, messageDetails.messageCodepage!)
            XCTAssertEqual(1600275057.0, (messageDetails.getProperty(id: .unknown0x0F0A) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual("Hugh Bellamy", messageDetails.lastModifierName!)
            XCTAssertEqual(2, (messageDetails.getProperty(id: .unknown0x365A) as UInt32?)!)
            XCTAssertEqual([0xB8, 0xC6, 0xFC, 0x51, 0x83, 0x78, 0xCA, 0x4E, 0x99, 0x99, 0x4B, 0x66, 0xFC, 0x78, 0x18, 0x8F], [UInt8](messageDetails.searchKey!))
            XCTAssertEqual("Common Views", (messageDetails.getProperty(id: .tagParentDisplay) as String?)!)
            XCTAssertEqual("pstreadertests@outlook.com", (messageDetails.getProperty(id: .unknown0x5D0A) as String?)!)
            XCTAssertEqual(0x01, messageDetails.conversationIndex!.header.reserved)
            XCTAssertEqual(518316612552.0, messageDetails.conversationIndex!.header.currentFileTime.timeIntervalSince1970)
            XCTAssertEqual(UUID(uuidString: "43C50A1A-119C-F841-9881-F8367CAC9418"), messageDetails.conversationIndex!.header.guid)
            XCTAssertEqual(0, messageDetails.conversationIndex!.responseLevels.count)
            XCTAssertFalse(messageDetails.nonReceiptNotificationRequested!)
            XCTAssertEqual("EX", (messageDetails.getProperty(id: .unknown0x4024) as String?)!)
            XCTAssertEqual([0xFE, 0x7F, 0x03, 0x00, 0x53, 0x34, 0x30, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((messageDetails.getProperty(id: .unknown0x0E4C) as Data?)!))
            XCTAssertEqual([0xFE, 0x7F, 0x03, 0x00, 0x53, 0x34, 0x30, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((messageDetails.getProperty(id: .unknown0x0E4B) as Data?)!))
            XCTAssertFalse((messageDetails.getProperty(id: .unknown0x0ECD) as Bool?)!)
            XCTAssertEqual(20127, messageDetails.internetCodepage!)
            XCTAssertEqual(CLSID_CalendarFolder, messageDetails.wlinkFolderType!)
            XCTAssertEqual(1600275057.0, messageDetails.messageDeliveryTime!.timeIntervalSince1970)
            XCTAssertEqual(.normal, messageDetails.sensitivity!)
            XCTAssertEqual(0x6E68347A, messageDetails.wlinkSaveStamp!)
            XCTAssertEqual("My Calendars", messageDetails.conversationTopic!)
            XCTAssertEqual("\u{01}\u{01}My Calendars", messageDetails.subject!)
            XCTAssertEqual(.groupHeaderShortcut, messageDetails.wlinkType!)
            XCTAssertEqual(21043, (messageDetails.getProperty(id: .unknown0x6743) as UInt64?)!)
            XCTAssertEqual([.read, .unsent, .fai], messageDetails.messageFlags)

            XCTAssertEqual(0, messageDetails.attachments.count)
            XCTAssertEqual(0, messageDetails.recipients.count)

            }
            XCTAssertEqual(.undefined, associatedContents[3].wlinkROGroupType!)
            XCTAssertEqual(CLSID_CalendarFolder, associatedContents[3].wlinkFolderType!)
            XCTAssertEqual(1, associatedContents[3].predecessorChangeList!.values.count)
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), associatedContents[3].predecessorChangeList!.values[0].namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x08, 0x04], associatedContents[3].predecessorChangeList!.values[0].localId)
            XCTAssertEqual(0x00000000, (associatedContents[3].wlinkStoreEntryId as? StoreEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "38A1BB10-05E5-101A-A1BB-08002B2A56C2"), (associatedContents[3].wlinkStoreEntryId as? StoreEntryID)!.providerUid)
            XCTAssertEqual(0x00, (associatedContents[3].wlinkStoreEntryId as? StoreEntryID)!.version)
            XCTAssertEqual(0x00, (associatedContents[3].wlinkStoreEntryId as? StoreEntryID)!.flag)
            XCTAssertEqual("pstprx.dll\u{00}\u{00}\u{00}\u{00}", (associatedContents[3].wlinkStoreEntryId as? StoreEntryID)!.dllFileName)
            XCTAssertEqual(0x00000000, (associatedContents[3].wlinkStoreEntryId as? StoreEntryID)!.wrappedFlags)
            XCTAssertEqual(UUID(uuidString: "E92FEB75-9650-4486-83B8-7DE522AA4948"), (associatedContents[3].wlinkStoreEntryId as? StoreEntryID)!.wrappedProviderUid)
            XCTAssertEqual([.cliWithNamedpropFix, .enableLazyLoading, OpenStoreFlags(rawValue: 0x00400000)], (associatedContents[3].wlinkStoreEntryId as? StoreEntryID)!.wrappedType)
            XCTAssertEqual(":\\Users\\hughbe\\AppData\\Local\\Microsoft\\Outlook\\hughbellars@gmail.com.ost", (associatedContents[3].wlinkStoreEntryId as? StoreEntryID)!.path)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x59, 0xDA, 0x07, 0x29, 0x9D, 0xAF, 0x5C, 0x4A, 0xB2, 0x0C, 0x8B, 0x81, 0xA7, 0x8C, 0x96, 0xC0, 0x01, 0x00, 0xB2, 0xA9, 0x7E, 0x6D, 0x73, 0xAB, 0x95, 0x4D, 0xBB, 0x15, 0x55, 0xC1, 0x54, 0x72, 0xFC, 0xB1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8](associatedContents[3].wlinkRecordKey!))
            XCTAssertEqual(.calendar, associatedContents[3].wlinkSection!)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", associatedContents[3].messageClass!)
            XCTAssertEqual(UUID(uuidString: "0006F0B7-0000-0000-C000-000000000046"), associatedContents[3].wlinkGroupClsid!)
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), associatedContents[3].changeKey!.namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x08, 0x04], associatedContents[3].changeKey!.localId)
            XCTAssertEqual(4198, associatedContents[3].ltpRowVer!)
            XCTAssertEqual(0, (associatedContents[3].getProperty(id: .unknown0x6612) as UInt32?)!)
            XCTAssertEqual(1601556711.0, associatedContents[3].lastModificationTime!.timeIntervalSince1970)
            XCTAssertEqual([], associatedContents[3].messageStatus)
            XCTAssertEqual(0x719E7140, associatedContents[3].wlinkSaveStamp!)
            XCTAssertEqual(0x00000000, (associatedContents[3].wlinkEntryId as? FolderEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "59DA0729-9DAF-5C4A-B20C-8B81A78C96C0"), (associatedContents[3].wlinkEntryId as? FolderEntryID)!.providerUid)
            XCTAssertEqual(.privateFolder, (associatedContents[3].wlinkEntryId as? FolderEntryID)!.folderType)
            XCTAssertEqual(UUID(uuidString: "6D7EA9B2-AB73-4D95-BB15-55C15472FCB1"), (associatedContents[3].wlinkEntryId as? FolderEntryID)!.databaseGuid)
            XCTAssertEqual(0, (associatedContents[3].wlinkEntryId as? FolderEntryID)!.globalCounter)
            XCTAssertEqual(0x0000, (associatedContents[3].wlinkEntryId as? FolderEntryID)!.pad)
            XCTAssertEqual("Calendar (This computer only)", associatedContents[3].subject!)
            XCTAssertEqual([.read, .unsent, .fai], associatedContents[3].messageFlags)
            XCTAssertEqual("My Calendars", associatedContents[3].wlinkGroupName!)
            XCTAssertEqual(-1, associatedContents[3].wlinkCalendarColor!)
            XCTAssertEqual([.imapFolder], associatedContents[3].wlinkFlags)
            XCTAssertEqual([0xBF], [UInt8](associatedContents[3].wlinkOrdinal!))
            XCTAssertEqual(12693677024720453633, (associatedContents[3].getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual(0x001003A8, associatedContents[3].ltpRowId!)
            XCTAssertEqual(UUID(uuidString: "3806C069-634C-4762-AED8-C23CAEA4C626"), associatedContents[3].wlinkClientID!)
            XCTAssertEqual(.normalFolder, associatedContents[3].wlinkType!)

            XCTAssertEqual(0, associatedContents[3].attachments.count)
            XCTAssertEqual(0, associatedContents[3].recipients.count)

            do {
            let messageDetails = try associatedContents[3].getMessageDetails()
            XCTAssertEqual(.calendar, messageDetails.wlinkSection!)
            XCTAssertEqual([.read, .unsent, .fai], messageDetails.messageFlags)
            XCTAssertEqual(-1, messageDetails.wlinkCalendarColor!)
            XCTAssertEqual([0x06, 0xC3, 0x76, 0x56, 0x25, 0xCC, 0x0C, 0x49, 0xBF, 0x10, 0x3B, 0x69, 0x4D, 0x56, 0x4F, 0xF4], [UInt8](messageDetails.searchKey!))
            XCTAssertEqual(.normalFolder, messageDetails.wlinkType!)
            XCTAssertEqual(12693677024720453633, (messageDetails.getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual(0x719E7140, messageDetails.wlinkSaveStamp!)
            XCTAssertEqual(0x00000334, messageDetails.messageSize!)
            XCTAssertEqual(.normal, messageDetails.importance!)
            XCTAssertEqual(CLSID_CalendarFolder, messageDetails.wlinkFolderType!)
            XCTAssertEqual("pstreadertests@outlook.com", messageDetails.lastModifierName!)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkEntryId as? FolderEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "59DA0729-9DAF-5C4A-B20C-8B81A78C96C0"), (messageDetails.wlinkEntryId as? FolderEntryID)!.providerUid)
            XCTAssertEqual(.privateFolder, (messageDetails.wlinkEntryId as? FolderEntryID)!.folderType)
            XCTAssertEqual(UUID(uuidString: "6D7EA9B2-AB73-4D95-BB15-55C15472FCB1"), (messageDetails.wlinkEntryId as? FolderEntryID)!.databaseGuid)
            XCTAssertEqual(0, (messageDetails.wlinkEntryId as? FolderEntryID)!.globalCounter)
            XCTAssertEqual(0x0000, (messageDetails.wlinkEntryId as? FolderEntryID)!.pad)
            XCTAssertEqual("Calendar (This computer only)", messageDetails.subject!)
            XCTAssertEqual([.imapFolder], messageDetails.wlinkFlags)
            XCTAssertEqual([0xBF], [UInt8](messageDetails.wlinkOrdinal!))
            XCTAssertEqual(.undefined, messageDetails.wlinkROGroupType!)
            XCTAssertEqual(1601556711.0, messageDetails.creationTime!.timeIntervalSince1970)
            XCTAssertEqual("My Calendars", messageDetails.wlinkGroupName!)
            XCTAssertEqual(.normal, messageDetails.sensitivity!)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0x59, 0xDA, 0x07, 0x29, 0x9D, 0xAF, 0x5C, 0x4A, 0xB2, 0x0C, 0x8B, 0x81, 0xA7, 0x8C, 0x96, 0xC0, 0x01, 0x00, 0xB2, 0xA9, 0x7E, 0x6D, 0x73, 0xAB, 0x95, 0x4D, 0xBB, 0x15, 0x55, 0xC1, 0x54, 0x72, 0xFC, 0xB1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8](messageDetails.wlinkRecordKey!))
            XCTAssertEqual(0x00000000, (messageDetails.wlinkStoreEntryId as? StoreEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "38A1BB10-05E5-101A-A1BB-08002B2A56C2"), (messageDetails.wlinkStoreEntryId as? StoreEntryID)!.providerUid)
            XCTAssertEqual(0x00, (messageDetails.wlinkStoreEntryId as? StoreEntryID)!.version)
            XCTAssertEqual(0x00, (messageDetails.wlinkStoreEntryId as? StoreEntryID)!.flag)
            XCTAssertEqual("pstprx.dll\u{00}\u{00}\u{00}\u{00}", (messageDetails.wlinkStoreEntryId as? StoreEntryID)!.dllFileName)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkStoreEntryId as? StoreEntryID)!.wrappedFlags)
            XCTAssertEqual(UUID(uuidString: "E92FEB75-9650-4486-83B8-7DE522AA4948"), (messageDetails.wlinkStoreEntryId as? StoreEntryID)!.wrappedProviderUid)
            XCTAssertEqual([.cliWithNamedpropFix, .enableLazyLoading, OpenStoreFlags(rawValue: 0x00400000)], (messageDetails.wlinkStoreEntryId as? StoreEntryID)!.wrappedType)
            XCTAssertEqual(":\\Users\\hughbe\\AppData\\Local\\Microsoft\\Outlook\\hughbellars@gmail.com.ost", (messageDetails.wlinkStoreEntryId as? StoreEntryID)!.path)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", messageDetails.messageClass!)
            XCTAssertEqual(UUID(uuidString: "3806C069-634C-4762-AED8-C23CAEA4C626"), messageDetails.wlinkClientID!)
            XCTAssertEqual(UUID(uuidString: "0006F0B7-0000-0000-C000-000000000046"), messageDetails.wlinkGroupClsid!)

            XCTAssertEqual(0, messageDetails.attachments.count)
            XCTAssertEqual(0, messageDetails.recipients.count)

            }
            XCTAssertEqual(4764, associatedContents[4].ltpRowVer!)
            XCTAssertEqual(CLSID_CalendarFolder, associatedContents[4].wlinkFolderType!)
            XCTAssertEqual(0x0C6E0C3F, associatedContents[4].wlinkSaveStamp!)
            XCTAssertEqual([], associatedContents[4].messageStatus)
            XCTAssertEqual(1, associatedContents[4].predecessorChangeList!.values.count)
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), associatedContents[4].predecessorChangeList!.values[0].namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x0C, 0x0E], associatedContents[4].predecessorChangeList!.values[0].localId)
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), associatedContents[4].changeKey!.namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x0C, 0x0E], associatedContents[4].changeKey!.localId)
            XCTAssertEqual(0x00100468, associatedContents[4].ltpRowId!)
            XCTAssertEqual([], associatedContents[4].wlinkFlags)
            XCTAssertEqual([.read, .unsent, .fai], associatedContents[4].messageFlags)
            XCTAssertEqual(-1, associatedContents[4].wlinkCalendarColor!)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", associatedContents[4].messageClass!)
            XCTAssertEqual(1601557202.0, associatedContents[4].lastModificationTime!.timeIntervalSince1970)
            XCTAssertEqual([0xDF], [UInt8](associatedContents[4].wlinkOrdinal!))
            XCTAssertEqual(12765734618758381569, (associatedContents[4].getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual(.calendar, associatedContents[4].wlinkSection!)
            XCTAssertEqual(0, (associatedContents[4].getProperty(id: .unknown0x6612) as UInt32?)!)
            XCTAssertEqual("Shared Calendars", associatedContents[4].subject!)
            XCTAssertEqual(UUID(uuidString: "0006F0B9-0000-0000-C000-000000000046"), associatedContents[4].wlinkGroupHeaderID!)
            XCTAssertEqual(.groupHeaderShortcut, associatedContents[4].wlinkType!)
            XCTAssertEqual(.undefined, associatedContents[4].wlinkROGroupType!)

            XCTAssertEqual(0, associatedContents[4].attachments.count)
            XCTAssertEqual(0, associatedContents[4].recipients.count)

            do {
            let messageDetails = try associatedContents[4].getMessageDetails()
            XCTAssertEqual(0x0C6E0C3F, messageDetails.wlinkSaveStamp!)
            XCTAssertEqual(.normal, messageDetails.sensitivity!)
            XCTAssertEqual(.groupHeaderShortcut, messageDetails.wlinkType!)
            XCTAssertEqual([.read, .unsent, .fai], messageDetails.messageFlags)
            XCTAssertEqual("pstreadertests@outlook.com", messageDetails.lastModifierName!)
            XCTAssertEqual(UUID(uuidString: "0006F0B9-0000-0000-C000-000000000046"), messageDetails.wlinkGroupHeaderID!)
            XCTAssertEqual([0x58, 0x32, 0x6B, 0x9A, 0x6B, 0x15, 0xE8, 0x48, 0xB3, 0xCD, 0x03, 0xFB, 0x95, 0x42, 0xDC, 0x63], [UInt8](messageDetails.searchKey!))
            XCTAssertEqual("Shared Calendars", messageDetails.subject!)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", messageDetails.messageClass!)
            XCTAssertEqual(.normal, messageDetails.importance!)
            XCTAssertEqual(0x00000196, messageDetails.messageSize!)
            XCTAssertEqual([], messageDetails.wlinkFlags)
            XCTAssertEqual(CLSID_CalendarFolder, messageDetails.wlinkFolderType!)
            XCTAssertEqual([0xDF], [UInt8](messageDetails.wlinkOrdinal!))
            XCTAssertEqual(-1, messageDetails.wlinkCalendarColor!)
            XCTAssertEqual(.calendar, messageDetails.wlinkSection!)
            XCTAssertEqual(12765734618758381569, (messageDetails.getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual(.undefined, messageDetails.wlinkROGroupType!)
            XCTAssertEqual(1601557202.0, messageDetails.creationTime!.timeIntervalSince1970)

            XCTAssertEqual(0, messageDetails.attachments.count)
            XCTAssertEqual(0, messageDetails.recipients.count)

            }
            XCTAssertEqual(.calendar, associatedContents[5].wlinkSection!)
            XCTAssertEqual([.read, .unsent, .fai], associatedContents[5].messageFlags)
            XCTAssertEqual(-1, associatedContents[5].wlinkCalendarColor!)
            XCTAssertEqual(.normalFolder, associatedContents[5].wlinkType!)
            XCTAssertEqual(12909849806834237441, (associatedContents[5].getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual(0x0C6E0C3F, associatedContents[5].wlinkSaveStamp!)
            XCTAssertEqual(CLSID_CalendarFolder, associatedContents[5].wlinkFolderType!)
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), associatedContents[5].changeKey!.namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x0C, 0x10], associatedContents[5].changeKey!.localId)
            XCTAssertEqual(.undefined, associatedContents[5].wlinkROGroupType!)
            XCTAssertEqual([0xDF], [UInt8](associatedContents[5].wlinkOrdinal!))
            XCTAssertEqual(0x00000000, (associatedContents[5].wlinkEntryId as? FolderEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "CBB89467-E606-4248-A820-9CC1E3B9A128"), (associatedContents[5].wlinkEntryId as? FolderEntryID)!.providerUid)
            XCTAssertEqual(.privateFolder, (associatedContents[5].wlinkEntryId as? FolderEntryID)!.folderType)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), (associatedContents[5].wlinkEntryId as? FolderEntryID)!.databaseGuid)
            XCTAssertEqual(39279082390683648, (associatedContents[5].wlinkEntryId as? FolderEntryID)!.globalCounter)
            XCTAssertEqual(0x0000, (associatedContents[5].wlinkEntryId as? FolderEntryID)!.pad)
            XCTAssertEqual("Birthdays", associatedContents[5].subject!)
            XCTAssertEqual([WlinkFlags(rawValue: 0x00100000)], associatedContents[5].wlinkFlags)
            XCTAssertEqual(1601557203.0, associatedContents[5].lastModificationTime!.timeIntervalSince1970)
            XCTAssertEqual(0x001004A8, associatedContents[5].ltpRowId!)
            XCTAssertEqual(0x00000000, (associatedContents[5].wlinkStoreEntryId as? StoreObjectEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "38A1BB10-05E5-101A-A1BB-08002B2A56C2"), (associatedContents[5].wlinkStoreEntryId as? StoreObjectEntryID)!.providerUid)
            XCTAssertEqual(0x00, (associatedContents[5].wlinkStoreEntryId as? StoreObjectEntryID)!.version)
            XCTAssertEqual(0x00, (associatedContents[5].wlinkStoreEntryId as? StoreObjectEntryID)!.flag)
            XCTAssertEqual("EMSMDB.DLL\u{00}\u{00}\u{00}\u{00}", (associatedContents[5].wlinkStoreEntryId as? StoreObjectEntryID)!.dllFileName)
            XCTAssertEqual(0x00000000, (associatedContents[5].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedFlags)
            XCTAssertEqual(UUID(uuidString: "1B55FA20-AA66-11CD-9BC8-00AA002FC45A"), (associatedContents[5].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedProviderUid)
            XCTAssertEqual([.homeLogon, .takeOwnership], (associatedContents[5].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedType)
            XCTAssertEqual("pstreadertests@outlook.com\u{00}", (associatedContents[5].wlinkStoreEntryId as? StoreObjectEntryID)!.serverShortName)
            XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (associatedContents[5].wlinkStoreEntryId as? StoreObjectEntryID)!.mailboxDN)
            XCTAssertNil((associatedContents[5].wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV2)
            XCTAssertEqual(0xF43246E9, (associatedContents[5].wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3!.magic)
            XCTAssertEqual(0x00000048, (associatedContents[5].wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3!.size)
            XCTAssertEqual(0x00000002, (associatedContents[5].wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3!.version)
            XCTAssertEqual(0x00000010, (associatedContents[5].wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3!.offsetSmtpAddress)
            XCTAssertEqual("pstreadertests@outlook.com", (associatedContents[5].wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3!.smtpAddress)
            XCTAssertEqual(0x0000, (associatedContents[5].wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3!.reserved)
            XCTAssertEqual("My Calendars", associatedContents[5].wlinkGroupName!)
            XCTAssertEqual(4766, associatedContents[5].ltpRowVer!)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0xCB, 0xB8, 0x94, 0x67, 0xE6, 0x06, 0x42, 0x48, 0xA8, 0x20, 0x9C, 0xC1, 0xE3, 0xB9, 0xA1, 0x28, 0x01, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x00, 0x00, 0x09, 0x1E, 0x8C, 0x8B, 0x00, 0x00], [UInt8](associatedContents[5].wlinkRecordKey!))
            XCTAssertEqual(0, (associatedContents[5].getProperty(id: .unknown0x6612) as UInt32?)!)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", associatedContents[5].messageClass!)
            XCTAssertEqual([], associatedContents[5].messageStatus)
            XCTAssertEqual(1, associatedContents[5].predecessorChangeList!.values.count)
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), associatedContents[5].predecessorChangeList!.values[0].namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x0C, 0x10], associatedContents[5].predecessorChangeList!.values[0].localId)
            XCTAssertEqual(UUID(uuidString: "0006F0B7-0000-0000-C000-000000000046"), associatedContents[5].wlinkGroupClsid!)

            XCTAssertEqual(0, associatedContents[5].attachments.count)
            XCTAssertEqual(0, associatedContents[5].recipients.count)

            do {
            let messageDetails = try associatedContents[5].getMessageDetails()
            XCTAssertEqual(.normal, messageDetails.sensitivity!)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkEntryId as? FolderEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "CBB89467-E606-4248-A820-9CC1E3B9A128"), (messageDetails.wlinkEntryId as? FolderEntryID)!.providerUid)
            XCTAssertEqual(.privateFolder, (messageDetails.wlinkEntryId as? FolderEntryID)!.folderType)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), (messageDetails.wlinkEntryId as? FolderEntryID)!.databaseGuid)
            XCTAssertEqual(39279082390683648, (messageDetails.wlinkEntryId as? FolderEntryID)!.globalCounter)
            XCTAssertEqual(0x0000, (messageDetails.wlinkEntryId as? FolderEntryID)!.pad)
            XCTAssertEqual(UUID(uuidString: "0006F0B7-0000-0000-C000-000000000046"), messageDetails.wlinkGroupClsid!)
            XCTAssertEqual("Birthdays", messageDetails.subject!)
            XCTAssertEqual(-1, messageDetails.wlinkCalendarColor!)
            XCTAssertEqual(.calendar, messageDetails.wlinkSection!)
            XCTAssertEqual("My Calendars", messageDetails.wlinkGroupName!)
            XCTAssertEqual([0xDF], [UInt8](messageDetails.wlinkOrdinal!))
            XCTAssertEqual([WlinkFlags(rawValue: 0x00100000)], messageDetails.wlinkFlags)
            XCTAssertEqual(1601557203.0, messageDetails.creationTime!.timeIntervalSince1970)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0xCB, 0xB8, 0x94, 0x67, 0xE6, 0x06, 0x42, 0x48, 0xA8, 0x20, 0x9C, 0xC1, 0xE3, 0xB9, 0xA1, 0x28, 0x01, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x00, 0x00, 0x09, 0x1E, 0x8C, 0x8B, 0x00, 0x00], [UInt8](messageDetails.wlinkRecordKey!))
            XCTAssertEqual(CLSID_CalendarFolder, messageDetails.wlinkFolderType!)
            XCTAssertEqual(0x0000032C, messageDetails.messageSize!)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "38A1BB10-05E5-101A-A1BB-08002B2A56C2"), (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.providerUid)
            XCTAssertEqual(0x00, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.version)
            XCTAssertEqual(0x00, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.flag)
            XCTAssertEqual("EMSMDB.DLL\u{00}\u{00}\u{00}\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.dllFileName)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedFlags)
            XCTAssertEqual(UUID(uuidString: "1B55FA20-AA66-11CD-9BC8-00AA002FC45A"), (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedProviderUid)
            XCTAssertEqual([.homeLogon, .takeOwnership], (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedType)
            XCTAssertEqual("pstreadertests@outlook.com\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.serverShortName)
            XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.mailboxDN)
            XCTAssertNil((messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV2)
            XCTAssertEqual(0xF43246E9, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3!.magic)
            XCTAssertEqual(0x00000048, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3!.size)
            XCTAssertEqual(0x00000002, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3!.version)
            XCTAssertEqual(0x00000010, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3!.offsetSmtpAddress)
            XCTAssertEqual("pstreadertests@outlook.com", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3!.smtpAddress)
            XCTAssertEqual(0x0000, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3!.reserved)
            XCTAssertEqual(0x0C6E0C3F, messageDetails.wlinkSaveStamp!)
            XCTAssertEqual(.normalFolder, messageDetails.wlinkType!)
            XCTAssertEqual(.normal, messageDetails.importance!)
            XCTAssertEqual("pstreadertests@outlook.com", messageDetails.lastModifierName!)
            XCTAssertEqual(12909849806834237441, (messageDetails.getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual([0xF8, 0x4B, 0x87, 0xB2, 0x5D, 0x4E, 0x19, 0x40, 0xAC, 0xFE, 0xC4, 0x52, 0x71, 0x1A, 0x54, 0xBD], [UInt8](messageDetails.searchKey!))
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", messageDetails.messageClass!)
            XCTAssertEqual([.read, .unsent, .fai], messageDetails.messageFlags)
            XCTAssertEqual(.undefined, messageDetails.wlinkROGroupType!)

            XCTAssertEqual(0, messageDetails.attachments.count)
            XCTAssertEqual(0, messageDetails.recipients.count)

            }
            XCTAssertEqual(0x0C6E0C3F, associatedContents[6].wlinkSaveStamp!)
            XCTAssertEqual(UUID(uuidString: "0006F0B7-0000-0000-C000-000000000046"), associatedContents[6].wlinkGroupClsid!)
            XCTAssertEqual(0x00000000, (associatedContents[6].wlinkEntryId as? FolderEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "CBB89467-E606-4248-A820-9CC1E3B9A128"), (associatedContents[6].wlinkEntryId as? FolderEntryID)!.providerUid)
            XCTAssertEqual(.privateFolder, (associatedContents[6].wlinkEntryId as? FolderEntryID)!.folderType)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), (associatedContents[6].wlinkEntryId as? FolderEntryID)!.databaseGuid)
            XCTAssertEqual(39560557367394304, (associatedContents[6].wlinkEntryId as? FolderEntryID)!.globalCounter)
            XCTAssertEqual(0x0000, (associatedContents[6].wlinkEntryId as? FolderEntryID)!.pad)
            XCTAssertEqual("My Calendars", associatedContents[6].wlinkGroupName!)
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), associatedContents[6].changeKey!.namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x0C, 0x16], associatedContents[6].changeKey!.localId)
            XCTAssertEqual(.normalFolder, associatedContents[6].wlinkType!)
            XCTAssertEqual(47377, (associatedContents[6].getProperty(id: .PR_GW_MTSIN_ENTRYID) as UInt64?)!)
            XCTAssertEqual([.read, .unsent, .fai], associatedContents[6].messageFlags)
            XCTAssertEqual(2, associatedContents[6].predecessorChangeList!.values.count)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), associatedContents[6].predecessorChangeList!.values[0].namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x09, 0x1C, 0x76, 0x0C], associatedContents[6].predecessorChangeList!.values[0].localId)
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), associatedContents[6].predecessorChangeList!.values[1].namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x0C, 0x16], associatedContents[6].predecessorChangeList!.values[1].localId)
            XCTAssertEqual("\u{01}\u{01}United States holidays", associatedContents[6].subject!)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", associatedContents[6].messageClass!)
            XCTAssertEqual([], associatedContents[6].messageStatus)
            XCTAssertEqual(4791, associatedContents[6].ltpRowVer!)
            XCTAssertEqual(CLSID_CalendarFolder, associatedContents[6].wlinkFolderType!)
            XCTAssertEqual(0x001004E8, associatedContents[6].ltpRowId!)
            XCTAssertEqual([WlinkFlags(rawValue: 0x00100000)], associatedContents[6].wlinkFlags)
            XCTAssertEqual([0x3F], [UInt8](associatedContents[6].wlinkOrdinal!))
            XCTAssertEqual(-1, associatedContents[6].wlinkCalendarColor!)
            XCTAssertEqual(1601557215.0, associatedContents[6].lastModificationTime!.timeIntervalSince1970)
            XCTAssertEqual(.calendar, associatedContents[6].wlinkSection!)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0xCB, 0xB8, 0x94, 0x67, 0xE6, 0x06, 0x42, 0x48, 0xA8, 0x20, 0x9C, 0xC1, 0xE3, 0xB9, 0xA1, 0x28, 0x01, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x00, 0x00, 0x09, 0x1E, 0x8C, 0x8C, 0x00, 0x00], [UInt8](associatedContents[6].wlinkRecordKey!))
            XCTAssertEqual(0, (associatedContents[6].getProperty(id: .unknown0x6612) as UInt32?)!)
            XCTAssertEqual(1056690086575341569, (associatedContents[6].getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual(0x00000000, (associatedContents[6].wlinkStoreEntryId as? StoreObjectEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "38A1BB10-05E5-101A-A1BB-08002B2A56C2"), (associatedContents[6].wlinkStoreEntryId as? StoreObjectEntryID)!.providerUid)
            XCTAssertEqual(0x00, (associatedContents[6].wlinkStoreEntryId as? StoreObjectEntryID)!.version)
            XCTAssertEqual(0x00, (associatedContents[6].wlinkStoreEntryId as? StoreObjectEntryID)!.flag)
            XCTAssertEqual("EMSMDB.DLL\u{00}\u{00}\u{00}\u{00}", (associatedContents[6].wlinkStoreEntryId as? StoreObjectEntryID)!.dllFileName)
            XCTAssertEqual(0x00000000, (associatedContents[6].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedFlags)
            XCTAssertEqual(UUID(uuidString: "1B55FA20-AA66-11CD-9BC8-00AA002FC45A"), (associatedContents[6].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedProviderUid)
            XCTAssertEqual([.homeLogon, .takeOwnership], (associatedContents[6].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedType)
            XCTAssertEqual("LNXP123MB3820\u{00}", (associatedContents[6].wlinkStoreEntryId as? StoreObjectEntryID)!.serverShortName)
            XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (associatedContents[6].wlinkStoreEntryId as? StoreObjectEntryID)!.mailboxDN)
            XCTAssertNil((associatedContents[6].wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV2)
            XCTAssertNil((associatedContents[6].wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3)

            XCTAssertEqual(0, associatedContents[6].attachments.count)
            XCTAssertEqual(0, associatedContents[6].recipients.count)

            do {
            let messageDetails = try associatedContents[6].getMessageDetails()
            XCTAssertEqual([0x03, 0x42, 0x7C, 0x9F, 0xE3, 0xC4, 0xBD, 0x48, 0x9D, 0xA1, 0x38, 0x99, 0x5A, 0x39, 0x3F, 0x13], [UInt8](messageDetails.searchKey!))
            XCTAssertEqual("pstreadertests@outlook.com", (messageDetails.getProperty(id: .unknown0x5D0A) as String?)!)
            XCTAssertEqual(0x00000000, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.providerUid)
            XCTAssertEqual(0x00000001, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.version)
            XCTAssertEqual(.localMailUser, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.type)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30\u{00}", (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.x500DN)
            XCTAssertEqual(1601557199.0, (messageDetails.getProperty(id: .unknown0x0F02) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual(1601557199.0, messageDetails.messageDeliveryTime!.timeIntervalSince1970)
            XCTAssertEqual("My Calendars", messageDetails.wlinkGroupName!)
            XCTAssertEqual([0x3F], [UInt8](messageDetails.wlinkOrdinal!))
            XCTAssertEqual(0x00000884, messageDetails.messageSize!)
            XCTAssertEqual(1033, messageDetails.messageLocaleId!)
            XCTAssertEqual("Hugh Bellamy", messageDetails.creatorSimpleDisplayName!)
            XCTAssertEqual(8, (messageDetails.getProperty(id: .unknown0x0E2F) as UInt32?)!)
            XCTAssertEqual(1252, messageDetails.messageCodepage!)
            XCTAssertEqual(-1, messageDetails.wlinkCalendarColor!)
            XCTAssertEqual(UUID(uuidString: "0006F0B7-0000-0000-C000-000000000046"), messageDetails.wlinkGroupClsid!)
            XCTAssertEqual(.undefined, messageDetails.nativeBody!)
            XCTAssertEqual(CLSID_CalendarFolder, messageDetails.wlinkFolderType!)
            XCTAssertEqual(.calendar, messageDetails.wlinkSection!)
            XCTAssertFalse(messageDetails.readReceiptRequested!)
            XCTAssertEqual(0, (messageDetails.getProperty(id: .PR_CREATOR_FLAG) as UInt32?)!)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30", (messageDetails.getProperty(id: .unknown0x4025) as String?)!)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30", messageDetails.creatorEmailAddress!)
            XCTAssertEqual(1601557199.0, messageDetails.creationTime!.timeIntervalSince1970)
            XCTAssertEqual("\u{01}\u{01}United States holidays", messageDetails.subject!)
            XCTAssertFalse(messageDetails.smartNoAttach!)
            XCTAssertEqual("pstreadertests@outlook.com", messageDetails.lastModifierName!)
            XCTAssertTrue((messageDetails.getProperty(id: .unknown0x36FA) as Bool?)!)
            XCTAssertEqual(1601557199.0, messageDetails.clientSubmitTime!.timeIntervalSince1970)
            XCTAssertEqual(0x0C6E0C3F, messageDetails.wlinkSaveStamp!)
            XCTAssertEqual([0xFE, 0x7F, 0x03, 0x00, 0x53, 0x34, 0x30, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((messageDetails.getProperty(id: .unknown0x0E4C) as Data?)!))
            XCTAssertEqual("<LNXP123MB38205E495910B45091045EE2CB300@LNXP123MB3820.GBRP123.PROD.OUTLOOK.COM>", (messageDetails.getProperty(id: .tagInternetMessageId) as String?)!)
            XCTAssertEqual(0, (messageDetails.getProperty(id: .unknown0x1213) as UInt32?)!)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0xCB, 0xB8, 0x94, 0x67, 0xE6, 0x06, 0x42, 0x48, 0xA8, 0x20, 0x9C, 0xC1, 0xE3, 0xB9, 0xA1, 0x28, 0x01, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x00, 0x00, 0x09, 0x1E, 0x8C, 0x8C, 0x00, 0x00], [UInt8](messageDetails.wlinkRecordKey!))
            XCTAssertEqual("Common Views", (messageDetails.getProperty(id: .tagParentDisplay) as String?)!)
            XCTAssertEqual(0, (messageDetails.getProperty(id: .PR_MODIFIER_FLAG) as UInt32?)!)
            XCTAssertEqual(2, (messageDetails.getProperty(id: .unknown0x365A) as UInt32?)!)
            XCTAssertEqual(.normal, messageDetails.sensitivity!)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "38A1BB10-05E5-101A-A1BB-08002B2A56C2"), (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.providerUid)
            XCTAssertEqual(0x00, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.version)
            XCTAssertEqual(0x00, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.flag)
            XCTAssertEqual("EMSMDB.DLL\u{00}\u{00}\u{00}\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.dllFileName)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedFlags)
            XCTAssertEqual(UUID(uuidString: "1B55FA20-AA66-11CD-9BC8-00AA002FC45A"), (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedProviderUid)
            XCTAssertEqual([.homeLogon, .takeOwnership], (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedType)
            XCTAssertEqual("LNXP123MB3820\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.serverShortName)
            XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.mailboxDN)
            XCTAssertNil((messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV2)
            XCTAssertNil((messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkEntryId as? FolderEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "CBB89467-E606-4248-A820-9CC1E3B9A128"), (messageDetails.wlinkEntryId as? FolderEntryID)!.providerUid)
            XCTAssertEqual(.privateFolder, (messageDetails.wlinkEntryId as? FolderEntryID)!.folderType)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), (messageDetails.wlinkEntryId as? FolderEntryID)!.databaseGuid)
            XCTAssertEqual(39560557367394304, (messageDetails.wlinkEntryId as? FolderEntryID)!.globalCounter)
            XCTAssertEqual(0x0000, (messageDetails.wlinkEntryId as? FolderEntryID)!.pad)
            XCTAssertEqual("pstreadertests@outlook.com", (messageDetails.getProperty(id: .unknown0x5D0B) as String?)!)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", messageDetails.messageClass!)
            XCTAssertEqual(8, (messageDetails.getProperty(id: .tagInternetArticleNumber) as UInt32?)!)
            XCTAssertEqual("Hugh Bellamy", messageDetails.lastModifierSimpleDisplayName!)
            XCTAssertEqual(1056690086575341569, (messageDetails.getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual([0xFE, 0x7F, 0x03, 0x00, 0x53, 0x34, 0x30, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((messageDetails.getProperty(id: .unknown0x0E4B) as Data?)!))
            XCTAssertEqual([WlinkFlags(rawValue: 0x00100000)], messageDetails.wlinkFlags)
            XCTAssertFalse((messageDetails.getProperty(id: .unknown0x0ECD) as Bool?)!)
            XCTAssertEqual(47351, (messageDetails.getProperty(id: .unknown0x6743) as UInt64?)!)
            XCTAssertEqual("EX", (messageDetails.getProperty(id: .unknown0x4024) as String?)!)
            XCTAssertEqual(.normalFolder, messageDetails.wlinkType!)
            XCTAssertEqual(0, (messageDetails.getProperty(guid: UUID(uuidString: "58B6F260-0251-4293-9737-2EF23187F89D")!, name: "NavigationNodeCalendarArgbColor") as UInt32?)!)
            XCTAssertEqual(20127, messageDetails.internetCodepage!)
            XCTAssertEqual([0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0xFE, 0x7F, 0x03, 0x00, 0x30, 0x4C, 0x53, 0x34], [UInt8]((messageDetails.getProperty(id: .PR_LAST_MODIFIER_SID) as Data?)!))
            XCTAssertEqual([0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0xFE, 0x7F, 0x03, 0x00, 0x30, 0x4C, 0x53, 0x34], [UInt8]((messageDetails.getProperty(id: .PR_CREATOR_SID) as Data?)!))
            XCTAssertEqual(1, (messageDetails.getProperty(id: .unknown0x5037) as UInt32?)!)
            XCTAssertEqual(1601557199.0, (messageDetails.getProperty(id: .unknown0x0F0A) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual(0x01, messageDetails.conversationIndex!.header.reserved)
            XCTAssertEqual(1737666211663.0, messageDetails.conversationIndex!.header.currentFileTime.timeIntervalSince1970)
            XCTAssertEqual(UUID(uuidString: "059B3B71-1123-DD43-B0A7-85C2D7F862E7"), messageDetails.conversationIndex!.header.guid)
            XCTAssertEqual(0, messageDetails.conversationIndex!.responseLevels.count)
            XCTAssertEqual("United States holidays", messageDetails.conversationTopic!)
            XCTAssertEqual([.read, .unsent, .fai], messageDetails.messageFlags)
            XCTAssertEqual("EX", messageDetails.creatorAddressType!)
            XCTAssertFalse(messageDetails.nonReceiptNotificationRequested!)
            XCTAssertEqual(.normal, messageDetails.priority!)
            XCTAssertEqual(.normal, messageDetails.importance!)

            XCTAssertEqual(0, messageDetails.attachments.count)
            XCTAssertEqual(0, messageDetails.recipients.count)

            }
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0xCB, 0xB8, 0x94, 0x67, 0xE6, 0x06, 0x42, 0x48, 0xA8, 0x20, 0x9C, 0xC1, 0xE3, 0xB9, 0xA1, 0x28, 0x01, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0F, 0x00, 0x00], [UInt8](associatedContents[7].wlinkRecordKey!))
            XCTAssertEqual(4792, associatedContents[7].ltpRowVer!)
            XCTAssertEqual(1601557215.0, associatedContents[7].lastModificationTime!.timeIntervalSince1970)
            XCTAssertEqual(CLSID_MailFolder, associatedContents[7].wlinkFolderType!)
            XCTAssertEqual(.mail, associatedContents[7].wlinkSection!)
            XCTAssertEqual(.normalFolder, associatedContents[7].wlinkType!)
            XCTAssertEqual(0x00000000, (associatedContents[7].wlinkStoreEntryId as? StoreObjectEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "38A1BB10-05E5-101A-A1BB-08002B2A56C2"), (associatedContents[7].wlinkStoreEntryId as? StoreObjectEntryID)!.providerUid)
            XCTAssertEqual(0x00, (associatedContents[7].wlinkStoreEntryId as? StoreObjectEntryID)!.version)
            XCTAssertEqual(0x00, (associatedContents[7].wlinkStoreEntryId as? StoreObjectEntryID)!.flag)
            XCTAssertEqual("EMSMDB.DLL\u{00}\u{00}\u{00}\u{00}", (associatedContents[7].wlinkStoreEntryId as? StoreObjectEntryID)!.dllFileName)
            XCTAssertEqual(0x00000000, (associatedContents[7].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedFlags)
            XCTAssertEqual(UUID(uuidString: "1B55FA20-AA66-11CD-9BC8-00AA002FC45A"), (associatedContents[7].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedProviderUid)
            XCTAssertEqual([.homeLogon, .takeOwnership], (associatedContents[7].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedType)
            XCTAssertEqual("LNXP123MB3820\u{00}", (associatedContents[7].wlinkStoreEntryId as? StoreObjectEntryID)!.serverShortName)
            XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (associatedContents[7].wlinkStoreEntryId as? StoreObjectEntryID)!.mailboxDN)
            XCTAssertNil((associatedContents[7].wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV2)
            XCTAssertNil((associatedContents[7].wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3)
            XCTAssertEqual(0x00000000, (associatedContents[7].wlinkEntryId as? FolderEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "CBB89467-E606-4248-A820-9CC1E3B9A128"), (associatedContents[7].wlinkEntryId as? FolderEntryID)!.providerUid)
            XCTAssertEqual(.privateFolder, (associatedContents[7].wlinkEntryId as? FolderEntryID)!.folderType)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), (associatedContents[7].wlinkEntryId as? FolderEntryID)!.databaseGuid)
            XCTAssertEqual(4223224162287616, (associatedContents[7].wlinkEntryId as? FolderEntryID)!.globalCounter)
            XCTAssertEqual(0x0000, (associatedContents[7].wlinkEntryId as? FolderEntryID)!.pad)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", associatedContents[7].messageClass!)
            XCTAssertEqual(0, (associatedContents[7].getProperty(id: .unknown0x6612) as UInt32?)!)
            XCTAssertEqual("\u{01}\u{01}Drafts", associatedContents[7].subject!)
            XCTAssertEqual(2, associatedContents[7].predecessorChangeList!.values.count)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), associatedContents[7].predecessorChangeList!.values[0].namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x09, 0x1C, 0x75, 0xF2], associatedContents[7].predecessorChangeList!.values[0].localId)
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), associatedContents[7].predecessorChangeList!.values[1].namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x0C, 0x19], associatedContents[7].predecessorChangeList!.values[1].localId)
            XCTAssertEqual([0xDF], [UInt8](associatedContents[7].wlinkOrdinal!))
            XCTAssertEqual(0x0C6E0C3F, associatedContents[7].wlinkSaveStamp!)
            XCTAssertEqual([.read, .unsent, .fai], associatedContents[7].messageFlags)
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), associatedContents[7].changeKey!.namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x0C, 0x19], associatedContents[7].changeKey!.localId)
            XCTAssertEqual([], associatedContents[7].messageStatus)
            XCTAssertEqual(0x00100508, associatedContents[7].ltpRowId!)
            XCTAssertEqual(47409, (associatedContents[7].getProperty(id: .PR_GW_MTSIN_ENTRYID) as UInt64?)!)
            XCTAssertEqual(984632492537413633, (associatedContents[7].getProperty(id: .unknown0x67F4) as UInt64?)!)

            XCTAssertEqual(0, associatedContents[7].attachments.count)
            XCTAssertEqual(0, associatedContents[7].recipients.count)

            do {
            let messageDetails = try associatedContents[7].getMessageDetails()
            XCTAssertEqual("pstreadertests@outlook.com", (messageDetails.getProperty(id: .unknown0x5D0A) as String?)!)
            XCTAssertEqual([0xFE, 0x7F, 0x03, 0x00, 0x53, 0x34, 0x30, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((messageDetails.getProperty(id: .unknown0x0E4C) as Data?)!))
            XCTAssertEqual(1033, messageDetails.messageLocaleId!)
            XCTAssertEqual(1252, messageDetails.messageCodepage!)
            XCTAssertEqual(.normalFolder, messageDetails.wlinkType!)
            XCTAssertEqual(1601557199.0, messageDetails.creationTime!.timeIntervalSince1970)
            XCTAssertEqual(.normal, messageDetails.priority!)
            XCTAssertEqual([0xDF], [UInt8](messageDetails.wlinkOrdinal!))
            XCTAssertEqual(0x00000000, (messageDetails.wlinkEntryId as? FolderEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "CBB89467-E606-4248-A820-9CC1E3B9A128"), (messageDetails.wlinkEntryId as? FolderEntryID)!.providerUid)
            XCTAssertEqual(.privateFolder, (messageDetails.wlinkEntryId as? FolderEntryID)!.folderType)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), (messageDetails.wlinkEntryId as? FolderEntryID)!.databaseGuid)
            XCTAssertEqual(4223224162287616, (messageDetails.wlinkEntryId as? FolderEntryID)!.globalCounter)
            XCTAssertEqual(0x0000, (messageDetails.wlinkEntryId as? FolderEntryID)!.pad)
            XCTAssertEqual("pstreadertests@outlook.com", messageDetails.lastModifierName!)
            XCTAssertEqual(.normal, messageDetails.sensitivity!)
            XCTAssertEqual(CLSID_MailFolder, messageDetails.wlinkFolderType!)
            XCTAssertEqual(0x01, messageDetails.conversationIndex!.header.reserved)
            XCTAssertEqual(1737666211663.0, messageDetails.conversationIndex!.header.currentFileTime.timeIntervalSince1970)
            XCTAssertEqual(UUID(uuidString: "E7597B7C-0998-5E4C-8088-9AA455A7C247"), messageDetails.conversationIndex!.header.guid)
            XCTAssertEqual(0, messageDetails.conversationIndex!.responseLevels.count)
            XCTAssertEqual([0xFE, 0x7F, 0x03, 0x00, 0x53, 0x34, 0x30, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((messageDetails.getProperty(id: .unknown0x0E4B) as Data?)!))
            XCTAssertEqual(1601557199.0, messageDetails.clientSubmitTime!.timeIntervalSince1970)
            XCTAssertEqual(0, (messageDetails.getProperty(id: .PR_CREATOR_FLAG) as UInt32?)!)
            XCTAssertEqual([0x6E, 0xF8, 0xC8, 0x2F, 0x7A, 0xD7, 0x2E, 0x4B, 0xB2, 0x2E, 0x2F, 0x68, 0x3B, 0x62, 0x68, 0x0C], [UInt8](messageDetails.searchKey!))
            XCTAssertEqual(20127, messageDetails.internetCodepage!)
            XCTAssertEqual(7, (messageDetails.getProperty(id: .tagInternetArticleNumber) as UInt32?)!)
            XCTAssertEqual(1601557199.0, (messageDetails.getProperty(id: .unknown0x0F02) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual("pstreadertests@outlook.com", (messageDetails.getProperty(id: .unknown0x5D0B) as String?)!)
            XCTAssertEqual(984632492537413633, (messageDetails.getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0xCB, 0xB8, 0x94, 0x67, 0xE6, 0x06, 0x42, 0x48, 0xA8, 0x20, 0x9C, 0xC1, 0xE3, 0xB9, 0xA1, 0x28, 0x01, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0F, 0x00, 0x00], [UInt8](messageDetails.wlinkRecordKey!))
            XCTAssertEqual("Hugh Bellamy", messageDetails.creatorSimpleDisplayName!)
            XCTAssertEqual("\u{01}\u{01}Drafts", messageDetails.subject!)
            XCTAssertEqual([0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0xFE, 0x7F, 0x03, 0x00, 0x30, 0x4C, 0x53, 0x34], [UInt8]((messageDetails.getProperty(id: .PR_CREATOR_SID) as Data?)!))
            XCTAssertEqual("<LNXP123MB3820CC6CB44BCCD17A6C4CAACB300@LNXP123MB3820.GBRP123.PROD.OUTLOOK.COM>", (messageDetails.getProperty(id: .tagInternetMessageId) as String?)!)
            XCTAssertEqual("EX", (messageDetails.getProperty(id: .unknown0x4024) as String?)!)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "38A1BB10-05E5-101A-A1BB-08002B2A56C2"), (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.providerUid)
            XCTAssertEqual(0x00, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.version)
            XCTAssertEqual(0x00, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.flag)
            XCTAssertEqual("EMSMDB.DLL\u{00}\u{00}\u{00}\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.dllFileName)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedFlags)
            XCTAssertEqual(UUID(uuidString: "1B55FA20-AA66-11CD-9BC8-00AA002FC45A"), (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedProviderUid)
            XCTAssertEqual([.homeLogon, .takeOwnership], (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedType)
            XCTAssertEqual("LNXP123MB3820\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.serverShortName)
            XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.mailboxDN)
            XCTAssertNil((messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV2)
            XCTAssertNil((messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3)
            XCTAssertEqual(47351, (messageDetails.getProperty(id: .unknown0x6743) as UInt64?)!)
            XCTAssertEqual("EX", messageDetails.creatorAddressType!)
            XCTAssertEqual("Common Views", (messageDetails.getProperty(id: .tagParentDisplay) as String?)!)
            XCTAssertEqual(.normal, messageDetails.importance!)
            XCTAssertFalse(messageDetails.smartNoAttach!)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", messageDetails.messageClass!)
            XCTAssertEqual([0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0xFE, 0x7F, 0x03, 0x00, 0x30, 0x4C, 0x53, 0x34], [UInt8]((messageDetails.getProperty(id: .PR_LAST_MODIFIER_SID) as Data?)!))
            XCTAssertEqual(.mail, messageDetails.wlinkSection!)
            XCTAssertEqual(0, (messageDetails.getProperty(id: .unknown0x1213) as UInt32?)!)
            XCTAssertFalse((messageDetails.getProperty(id: .unknown0x0ECD) as Bool?)!)
            XCTAssertEqual(0x00000000, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.providerUid)
            XCTAssertEqual(0x00000001, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.version)
            XCTAssertEqual(.localMailUser, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.type)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30\u{00}", (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.x500DN)
            XCTAssertEqual(7, (messageDetails.getProperty(id: .unknown0x0E2F) as UInt32?)!)
            XCTAssertEqual(1601557199.0, messageDetails.messageDeliveryTime!.timeIntervalSince1970)
            XCTAssertEqual(1601557199.0, (messageDetails.getProperty(id: .unknown0x0F0A) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual(.undefined, messageDetails.nativeBody!)
            XCTAssertEqual("Hugh Bellamy", messageDetails.lastModifierSimpleDisplayName!)
            XCTAssertEqual(1, (messageDetails.getProperty(id: .unknown0x5037) as UInt32?)!)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30", messageDetails.creatorEmailAddress!)
            XCTAssertEqual([.read, .unsent, .fai], messageDetails.messageFlags)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30", (messageDetails.getProperty(id: .unknown0x4025) as String?)!)
            XCTAssertTrue((messageDetails.getProperty(id: .unknown0x36FA) as Bool?)!)
            XCTAssertFalse(messageDetails.readReceiptRequested!)
            XCTAssertEqual("Drafts", messageDetails.conversationTopic!)
            XCTAssertEqual(2, (messageDetails.getProperty(id: .unknown0x365A) as UInt32?)!)
            XCTAssertEqual(0x0C6E0C3F, messageDetails.wlinkSaveStamp!)
            XCTAssertFalse(messageDetails.nonReceiptNotificationRequested!)
            XCTAssertEqual(0, (messageDetails.getProperty(id: .PR_MODIFIER_FLAG) as UInt32?)!)
            XCTAssertEqual(0x000007F0, messageDetails.messageSize!)

            XCTAssertEqual(0, messageDetails.attachments.count)
            XCTAssertEqual(0, messageDetails.recipients.count)

            }
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), associatedContents[8].changeKey!.namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x0C, 0x18], associatedContents[8].changeKey!.localId)
            XCTAssertEqual(0x0C6E0C3F, associatedContents[8].wlinkSaveStamp!)
            XCTAssertEqual([0xBF], [UInt8](associatedContents[8].wlinkOrdinal!))
            XCTAssertEqual("\u{01}\u{01}Sent Items", associatedContents[8].subject!)
            XCTAssertEqual(0x00100528, associatedContents[8].ltpRowId!)
            XCTAssertEqual(.normalFolder, associatedContents[8].wlinkType!)
            XCTAssertEqual(.mail, associatedContents[8].wlinkSection!)
            XCTAssertEqual([], associatedContents[8].messageStatus)
            XCTAssertEqual(0x00000000, (associatedContents[8].wlinkStoreEntryId as? StoreObjectEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "38A1BB10-05E5-101A-A1BB-08002B2A56C2"), (associatedContents[8].wlinkStoreEntryId as? StoreObjectEntryID)!.providerUid)
            XCTAssertEqual(0x00, (associatedContents[8].wlinkStoreEntryId as? StoreObjectEntryID)!.version)
            XCTAssertEqual(0x00, (associatedContents[8].wlinkStoreEntryId as? StoreObjectEntryID)!.flag)
            XCTAssertEqual("EMSMDB.DLL\u{00}\u{00}\u{00}\u{00}", (associatedContents[8].wlinkStoreEntryId as? StoreObjectEntryID)!.dllFileName)
            XCTAssertEqual(0x00000000, (associatedContents[8].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedFlags)
            XCTAssertEqual(UUID(uuidString: "1B55FA20-AA66-11CD-9BC8-00AA002FC45A"), (associatedContents[8].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedProviderUid)
            XCTAssertEqual([.homeLogon, .takeOwnership], (associatedContents[8].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedType)
            XCTAssertEqual("LNXP123MB3820\u{00}", (associatedContents[8].wlinkStoreEntryId as? StoreObjectEntryID)!.serverShortName)
            XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (associatedContents[8].wlinkStoreEntryId as? StoreObjectEntryID)!.mailboxDN)
            XCTAssertNil((associatedContents[8].wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV2)
            XCTAssertNil((associatedContents[8].wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3)
            XCTAssertEqual(0, (associatedContents[8].getProperty(id: .unknown0x6612) as UInt32?)!)
            XCTAssertEqual(0x00000000, (associatedContents[8].wlinkEntryId as? FolderEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "CBB89467-E606-4248-A820-9CC1E3B9A128"), (associatedContents[8].wlinkEntryId as? FolderEntryID)!.providerUid)
            XCTAssertEqual(.privateFolder, (associatedContents[8].wlinkEntryId as? FolderEntryID)!.folderType)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), (associatedContents[8].wlinkEntryId as? FolderEntryID)!.databaseGuid)
            XCTAssertEqual(2534374302023680, (associatedContents[8].wlinkEntryId as? FolderEntryID)!.globalCounter)
            XCTAssertEqual(0x0000, (associatedContents[8].wlinkEntryId as? FolderEntryID)!.pad)
            XCTAssertEqual(47441, (associatedContents[8].getProperty(id: .PR_GW_MTSIN_ENTRYID) as UInt64?)!)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", associatedContents[8].messageClass!)
            XCTAssertEqual(CLSID_MailFolder, associatedContents[8].wlinkFolderType!)
            XCTAssertEqual(2, associatedContents[8].predecessorChangeList!.values.count)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), associatedContents[8].predecessorChangeList!.values[0].namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x09, 0x1C, 0x75, 0xF1], associatedContents[8].predecessorChangeList!.values[0].localId)
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), associatedContents[8].predecessorChangeList!.values[1].namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x0C, 0x18], associatedContents[8].predecessorChangeList!.values[1].localId)
            XCTAssertEqual(4793, associatedContents[8].ltpRowVer!)
            XCTAssertEqual(1601557215.0, associatedContents[8].lastModificationTime!.timeIntervalSince1970)
            XCTAssertEqual([.read, .unsent, .fai], associatedContents[8].messageFlags)
            XCTAssertEqual(912574898499485697, (associatedContents[8].getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0xCB, 0xB8, 0x94, 0x67, 0xE6, 0x06, 0x42, 0x48, 0xA8, 0x20, 0x9C, 0xC1, 0xE3, 0xB9, 0xA1, 0x28, 0x01, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x01, 0x09, 0x00, 0x00], [UInt8](associatedContents[8].wlinkRecordKey!))

            XCTAssertEqual(0, associatedContents[8].attachments.count)
            XCTAssertEqual(0, associatedContents[8].recipients.count)

            do {
            let messageDetails = try associatedContents[8].getMessageDetails()
            XCTAssertEqual(.normal, messageDetails.sensitivity!)
            XCTAssertEqual(.normal, messageDetails.priority!)
            XCTAssertEqual("pstreadertests@outlook.com", (messageDetails.getProperty(id: .unknown0x5D0A) as String?)!)
            XCTAssertEqual(6, (messageDetails.getProperty(id: .unknown0x0E2F) as UInt32?)!)
            XCTAssertEqual(912574898499485697, (messageDetails.getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual(47351, (messageDetails.getProperty(id: .unknown0x6743) as UInt64?)!)
            XCTAssertEqual(1252, messageDetails.messageCodepage!)
            XCTAssertEqual(1601557199.0, messageDetails.messageDeliveryTime!.timeIntervalSince1970)
            XCTAssertEqual(.normalFolder, messageDetails.wlinkType!)
            XCTAssertEqual("Common Views", (messageDetails.getProperty(id: .tagParentDisplay) as String?)!)
            XCTAssertEqual([0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0xFE, 0x7F, 0x03, 0x00, 0x30, 0x4C, 0x53, 0x34], [UInt8]((messageDetails.getProperty(id: .PR_CREATOR_SID) as Data?)!))
            XCTAssertEqual(1601557199.0, (messageDetails.getProperty(id: .unknown0x0F0A) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual(0x0C6E0C3F, messageDetails.wlinkSaveStamp!)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0xCB, 0xB8, 0x94, 0x67, 0xE6, 0x06, 0x42, 0x48, 0xA8, 0x20, 0x9C, 0xC1, 0xE3, 0xB9, 0xA1, 0x28, 0x01, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x01, 0x09, 0x00, 0x00], [UInt8](messageDetails.wlinkRecordKey!))
            XCTAssertEqual(.mail, messageDetails.wlinkSection!)
            XCTAssertEqual(.normal, messageDetails.importance!)
            XCTAssertEqual(0, (messageDetails.getProperty(id: .unknown0x1213) as UInt32?)!)
            XCTAssertFalse(messageDetails.readReceiptRequested!)
            XCTAssertEqual(1601557199.0, messageDetails.clientSubmitTime!.timeIntervalSince1970)
            XCTAssertEqual(0x01, messageDetails.conversationIndex!.header.reserved)
            XCTAssertEqual(1737666211663.0, messageDetails.conversationIndex!.header.currentFileTime.timeIntervalSince1970)
            XCTAssertEqual(UUID(uuidString: "810B7377-ECDC-9841-B6D5-68CEC47DBC0E"), messageDetails.conversationIndex!.header.guid)
            XCTAssertEqual(0, messageDetails.conversationIndex!.responseLevels.count)
            XCTAssertFalse(messageDetails.nonReceiptNotificationRequested!)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "38A1BB10-05E5-101A-A1BB-08002B2A56C2"), (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.providerUid)
            XCTAssertEqual(0x00, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.version)
            XCTAssertEqual(0x00, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.flag)
            XCTAssertEqual("EMSMDB.DLL\u{00}\u{00}\u{00}\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.dllFileName)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedFlags)
            XCTAssertEqual(UUID(uuidString: "1B55FA20-AA66-11CD-9BC8-00AA002FC45A"), (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedProviderUid)
            XCTAssertEqual([.homeLogon, .takeOwnership], (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedType)
            XCTAssertEqual("LNXP123MB3820\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.serverShortName)
            XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.mailboxDN)
            XCTAssertNil((messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV2)
            XCTAssertNil((messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3)
            XCTAssertEqual([0xFE, 0x7F, 0x03, 0x00, 0x53, 0x34, 0x30, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((messageDetails.getProperty(id: .unknown0x0E4C) as Data?)!))
            XCTAssertEqual(2, (messageDetails.getProperty(id: .unknown0x365A) as UInt32?)!)
            XCTAssertEqual(1601557199.0, (messageDetails.getProperty(id: .unknown0x0F02) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual("pstreadertests@outlook.com", messageDetails.lastModifierName!)
            XCTAssertEqual(6, (messageDetails.getProperty(id: .tagInternetArticleNumber) as UInt32?)!)
            XCTAssertEqual("Sent Items", messageDetails.conversationTopic!)
            XCTAssertEqual([0xFE, 0x7F, 0x03, 0x00, 0x53, 0x34, 0x30, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((messageDetails.getProperty(id: .unknown0x0E4B) as Data?)!))
            XCTAssertEqual(CLSID_MailFolder, messageDetails.wlinkFolderType!)
            XCTAssertFalse((messageDetails.getProperty(id: .unknown0x0ECD) as Bool?)!)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30", messageDetails.creatorEmailAddress!)
            XCTAssertEqual("EX", (messageDetails.getProperty(id: .unknown0x4024) as String?)!)
            XCTAssertFalse(messageDetails.smartNoAttach!)
            XCTAssertEqual([0xD8, 0x54, 0x99, 0x77, 0xB3, 0x7C, 0xCB, 0x45, 0x9C, 0x52, 0x68, 0x3C, 0x02, 0x2C, 0x5B, 0x64], [UInt8](messageDetails.searchKey!))
            XCTAssertEqual(0, (messageDetails.getProperty(id: .PR_MODIFIER_FLAG) as UInt32?)!)
            XCTAssertEqual("pstreadertests@outlook.com", (messageDetails.getProperty(id: .unknown0x5D0B) as String?)!)
            XCTAssertEqual(.undefined, messageDetails.nativeBody!)
            XCTAssertEqual(1, (messageDetails.getProperty(id: .unknown0x5037) as UInt32?)!)
            XCTAssertEqual(0, (messageDetails.getProperty(id: .PR_CREATOR_FLAG) as UInt32?)!)
            XCTAssertEqual([0xBF], [UInt8](messageDetails.wlinkOrdinal!))
            XCTAssertEqual(0x00000000, (messageDetails.wlinkEntryId as? FolderEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "CBB89467-E606-4248-A820-9CC1E3B9A128"), (messageDetails.wlinkEntryId as? FolderEntryID)!.providerUid)
            XCTAssertEqual(.privateFolder, (messageDetails.wlinkEntryId as? FolderEntryID)!.folderType)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), (messageDetails.wlinkEntryId as? FolderEntryID)!.databaseGuid)
            XCTAssertEqual(2534374302023680, (messageDetails.wlinkEntryId as? FolderEntryID)!.globalCounter)
            XCTAssertEqual(0x0000, (messageDetails.wlinkEntryId as? FolderEntryID)!.pad)
            XCTAssertEqual("<LNXP123MB38201823E287152DC8DFCDDBCB300@LNXP123MB3820.GBRP123.PROD.OUTLOOK.COM>", (messageDetails.getProperty(id: .tagInternetMessageId) as String?)!)
            XCTAssertEqual(20127, messageDetails.internetCodepage!)
            XCTAssertEqual(0x00000000, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.providerUid)
            XCTAssertEqual(0x00000001, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.version)
            XCTAssertEqual(.localMailUser, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.type)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30\u{00}", (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.x500DN)
            XCTAssertEqual("Hugh Bellamy", messageDetails.lastModifierSimpleDisplayName!)
            XCTAssertTrue((messageDetails.getProperty(id: .unknown0x36FA) as Bool?)!)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30", (messageDetails.getProperty(id: .unknown0x4025) as String?)!)
            XCTAssertEqual("\u{01}\u{01}Sent Items", messageDetails.subject!)
            XCTAssertEqual("Hugh Bellamy", messageDetails.creatorSimpleDisplayName!)
            XCTAssertEqual(0x00000800, messageDetails.messageSize!)
            XCTAssertEqual([.read, .unsent, .fai], messageDetails.messageFlags)
            XCTAssertEqual("EX", messageDetails.creatorAddressType!)
            XCTAssertEqual(1601557199.0, messageDetails.creationTime!.timeIntervalSince1970)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", messageDetails.messageClass!)
            XCTAssertEqual([0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0xFE, 0x7F, 0x03, 0x00, 0x30, 0x4C, 0x53, 0x34], [UInt8]((messageDetails.getProperty(id: .PR_LAST_MODIFIER_SID) as Data?)!))
            XCTAssertEqual(1033, messageDetails.messageLocaleId!)

            XCTAssertEqual(0, messageDetails.attachments.count)
            XCTAssertEqual(0, messageDetails.recipients.count)

            }
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), associatedContents[9].changeKey!.namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x0C, 0x17], associatedContents[9].changeKey!.localId)
            XCTAssertEqual(0x0C6E0C3F, associatedContents[9].wlinkSaveStamp!)
            XCTAssertEqual([0x7F], [UInt8](associatedContents[9].wlinkOrdinal!))
            XCTAssertEqual("\u{01}\u{01}Inbox", associatedContents[9].subject!)
            XCTAssertEqual(0x00100548, associatedContents[9].ltpRowId!)
            XCTAssertEqual(.normalFolder, associatedContents[9].wlinkType!)
            XCTAssertEqual(.mail, associatedContents[9].wlinkSection!)
            XCTAssertEqual([], associatedContents[9].messageStatus)
            XCTAssertEqual(0x00000000, (associatedContents[9].wlinkStoreEntryId as? StoreObjectEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "38A1BB10-05E5-101A-A1BB-08002B2A56C2"), (associatedContents[9].wlinkStoreEntryId as? StoreObjectEntryID)!.providerUid)
            XCTAssertEqual(0x00, (associatedContents[9].wlinkStoreEntryId as? StoreObjectEntryID)!.version)
            XCTAssertEqual(0x00, (associatedContents[9].wlinkStoreEntryId as? StoreObjectEntryID)!.flag)
            XCTAssertEqual("EMSMDB.DLL\u{00}\u{00}\u{00}\u{00}", (associatedContents[9].wlinkStoreEntryId as? StoreObjectEntryID)!.dllFileName)
            XCTAssertEqual(0x00000000, (associatedContents[9].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedFlags)
            XCTAssertEqual(UUID(uuidString: "1B55FA20-AA66-11CD-9BC8-00AA002FC45A"), (associatedContents[9].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedProviderUid)
            XCTAssertEqual([.homeLogon, .takeOwnership], (associatedContents[9].wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedType)
            XCTAssertEqual("LNXP123MB3820\u{00}", (associatedContents[9].wlinkStoreEntryId as? StoreObjectEntryID)!.serverShortName)
            XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (associatedContents[9].wlinkStoreEntryId as? StoreObjectEntryID)!.mailboxDN)
            XCTAssertNil((associatedContents[9].wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV2)
            XCTAssertNil((associatedContents[9].wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3)
            XCTAssertEqual(0, (associatedContents[9].getProperty(id: .unknown0x6612) as UInt32?)!)
            XCTAssertEqual(0x00000000, (associatedContents[9].wlinkEntryId as? FolderEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "CBB89467-E606-4248-A820-9CC1E3B9A128"), (associatedContents[9].wlinkEntryId as? FolderEntryID)!.providerUid)
            XCTAssertEqual(.privateFolder, (associatedContents[9].wlinkEntryId as? FolderEntryID)!.folderType)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), (associatedContents[9].wlinkEntryId as? FolderEntryID)!.databaseGuid)
            XCTAssertEqual(3378799232155648, (associatedContents[9].wlinkEntryId as? FolderEntryID)!.globalCounter)
            XCTAssertEqual(0x0000, (associatedContents[9].wlinkEntryId as? FolderEntryID)!.pad)
            XCTAssertEqual(47473, (associatedContents[9].getProperty(id: .PR_GW_MTSIN_ENTRYID) as UInt64?)!)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", associatedContents[9].messageClass!)
            XCTAssertEqual(CLSID_MailFolder, associatedContents[9].wlinkFolderType!)
            XCTAssertEqual(2, associatedContents[9].predecessorChangeList!.values.count)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), associatedContents[9].predecessorChangeList!.values[0].namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x09, 0x1C, 0x75, 0xF0], associatedContents[9].predecessorChangeList!.values[0].localId)
            XCTAssertEqual(UUID(uuidString: "C900D166-479B-4C12-BB9E-C8DC29FA7341"), associatedContents[9].predecessorChangeList!.values[1].namespaceGuid)
            XCTAssertEqual([0x00, 0x00, 0x0C, 0x17], associatedContents[9].predecessorChangeList!.values[1].localId)
            XCTAssertEqual(4790, associatedContents[9].ltpRowVer!)
            XCTAssertEqual(1601557215.0, associatedContents[9].lastModificationTime!.timeIntervalSince1970)
            XCTAssertEqual([.read, .unsent, .fai], associatedContents[9].messageFlags)
            XCTAssertEqual(840517304461557761, (associatedContents[9].getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0xCB, 0xB8, 0x94, 0x67, 0xE6, 0x06, 0x42, 0x48, 0xA8, 0x20, 0x9C, 0xC1, 0xE3, 0xB9, 0xA1, 0x28, 0x01, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0C, 0x00, 0x00], [UInt8](associatedContents[9].wlinkRecordKey!))

            XCTAssertEqual(0, associatedContents[9].attachments.count)
            XCTAssertEqual(0, associatedContents[9].recipients.count)

            do {
            let messageDetails = try associatedContents[9].getMessageDetails()
            XCTAssertEqual("pstreadertests@outlook.com", (messageDetails.getProperty(id: .unknown0x5D0B) as String?)!)
            XCTAssertEqual("Hugh Bellamy", messageDetails.creatorSimpleDisplayName!)
            XCTAssertEqual("<LNXP123MB382081BEA1FB468ACFCA8A23CB300@LNXP123MB3820.GBRP123.PROD.OUTLOOK.COM>", (messageDetails.getProperty(id: .tagInternetMessageId) as String?)!)
            XCTAssertEqual(0x00000000, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "DCA740C8-C042-101A-B4B9-08002B2FE182"), (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.providerUid)
            XCTAssertEqual(0x00000001, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.version)
            XCTAssertEqual(.localMailUser, (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.type)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30\u{00}", (messageDetails.lastModifierEntryId as? AddressBookEntryID)!.x500DN)
            XCTAssertEqual("Hugh Bellamy", messageDetails.lastModifierSimpleDisplayName!)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30", messageDetails.creatorEmailAddress!)
            XCTAssertEqual("/O=FIRST ORGANIZATION/OU=EXCHANGE ADMINISTRATIVE GROUP(FYDIBOHF23SPDLT)/CN=RECIPIENTS/CN=00037FFE34534C30", (messageDetails.getProperty(id: .unknown0x4025) as String?)!)
            XCTAssertEqual(0, (messageDetails.getProperty(id: .PR_MODIFIER_FLAG) as UInt32?)!)
            XCTAssertEqual("pstreadertests@outlook.com", messageDetails.lastModifierName!)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "38A1BB10-05E5-101A-A1BB-08002B2A56C2"), (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.providerUid)
            XCTAssertEqual(0x00, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.version)
            XCTAssertEqual(0x00, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.flag)
            XCTAssertEqual("EMSMDB.DLL\u{00}\u{00}\u{00}\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.dllFileName)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedFlags)
            XCTAssertEqual(UUID(uuidString: "1B55FA20-AA66-11CD-9BC8-00AA002FC45A"), (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedProviderUid)
            XCTAssertEqual([.homeLogon, .takeOwnership], (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.wrappedType)
            XCTAssertEqual("LNXP123MB3820\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.serverShortName)
            XCTAssertEqual("/o=First Organization/ou=Exchange Administrative Group(FYDIBOHF23SPDLT)/cn=Recipients/cn=00037FFE34534C30\u{00}", (messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.mailboxDN)
            XCTAssertNil((messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV2)
            XCTAssertNil((messageDetails.wlinkStoreEntryId as? StoreObjectEntryID)!.entryIdV3)
            XCTAssertEqual(5, (messageDetails.getProperty(id: .tagInternetArticleNumber) as UInt32?)!)
            XCTAssertEqual([0x00, 0x00, 0x00, 0x00, 0xCB, 0xB8, 0x94, 0x67, 0xE6, 0x06, 0x42, 0x48, 0xA8, 0x20, 0x9C, 0xC1, 0xE3, 0xB9, 0xA1, 0x28, 0x01, 0x00, 0x4A, 0xB1, 0x11, 0xF7, 0xC8, 0x92, 0x94, 0x40, 0x98, 0x43, 0x75, 0x0B, 0xE6, 0x08, 0x6B, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0C, 0x00, 0x00], [UInt8](messageDetails.wlinkRecordKey!))
            XCTAssertEqual(.mail, messageDetails.wlinkSection!)
            XCTAssertEqual("IPM.Microsoft.WunderBar.Link", messageDetails.messageClass!)
            XCTAssertEqual(1601557199.0, (messageDetails.getProperty(id: .unknown0x0F02) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual(1601557199.0, messageDetails.messageDeliveryTime!.timeIntervalSince1970)
            XCTAssertEqual([0xFE, 0x7F, 0x03, 0x00, 0x53, 0x34, 0x30, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((messageDetails.getProperty(id: .unknown0x0E4C) as Data?)!))
            XCTAssertEqual(0, (messageDetails.getProperty(id: .PR_CREATOR_FLAG) as UInt32?)!)
            XCTAssertEqual(1601557199.0, messageDetails.clientSubmitTime!.timeIntervalSince1970)
            XCTAssertEqual([0x67, 0x66, 0xAD, 0xD8, 0xAA, 0x41, 0xDD, 0x4B, 0x8D, 0x38, 0x3D, 0x84, 0x5B, 0x46, 0x65, 0x4C], [UInt8](messageDetails.searchKey!))
            XCTAssertEqual(0x01, messageDetails.conversationIndex!.header.reserved)
            XCTAssertEqual(1737666211663.0, messageDetails.conversationIndex!.header.currentFileTime.timeIntervalSince1970)
            XCTAssertEqual(UUID(uuidString: "B37C05E4-9E37-334B-A28B-24248DE1A781"), messageDetails.conversationIndex!.header.guid)
            XCTAssertEqual(0, messageDetails.conversationIndex!.responseLevels.count)
            XCTAssertEqual("\u{01}\u{01}Inbox", messageDetails.subject!)
            XCTAssertEqual(5, (messageDetails.getProperty(id: .unknown0x0E2F) as UInt32?)!)
            XCTAssertFalse(messageDetails.smartNoAttach!)
            XCTAssertEqual(.undefined, messageDetails.nativeBody!)
            XCTAssertEqual([0x7F], [UInt8](messageDetails.wlinkOrdinal!))
            XCTAssertEqual(840517304461557761, (messageDetails.getProperty(id: .unknown0x67F4) as UInt64?)!)
            XCTAssertFalse(messageDetails.nonReceiptNotificationRequested!)
            XCTAssertEqual("pstreadertests@outlook.com", (messageDetails.getProperty(id: .unknown0x5D0A) as String?)!)
            XCTAssertEqual(0x000007EC, messageDetails.messageSize!)
            XCTAssertEqual(CLSID_MailFolder, messageDetails.wlinkFolderType!)
            XCTAssertEqual("Common Views", (messageDetails.getProperty(id: .tagParentDisplay) as String?)!)
            XCTAssertEqual(.normal, messageDetails.importance!)
            XCTAssertFalse(messageDetails.readReceiptRequested!)
            XCTAssertEqual(1, (messageDetails.getProperty(id: .unknown0x5037) as UInt32?)!)
            XCTAssertEqual([0xFE, 0x7F, 0x03, 0x00, 0x53, 0x34, 0x30, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], [UInt8]((messageDetails.getProperty(id: .unknown0x0E4B) as Data?)!))
            XCTAssertEqual(1033, messageDetails.messageLocaleId!)
            XCTAssertEqual(.normal, messageDetails.priority!)
            XCTAssertEqual([0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0xFE, 0x7F, 0x03, 0x00, 0x30, 0x4C, 0x53, 0x34], [UInt8]((messageDetails.getProperty(id: .PR_LAST_MODIFIER_SID) as Data?)!))
            XCTAssertEqual(1252, messageDetails.messageCodepage!)
            XCTAssertEqual(.normal, messageDetails.sensitivity!)
            XCTAssertEqual("EX", (messageDetails.getProperty(id: .unknown0x4024) as String?)!)
            XCTAssertEqual(20127, messageDetails.internetCodepage!)
            XCTAssertEqual(47351, (messageDetails.getProperty(id: .unknown0x6743) as UInt64?)!)
            XCTAssertFalse((messageDetails.getProperty(id: .unknown0x0ECD) as Bool?)!)
            XCTAssertEqual(0x0C6E0C3F, messageDetails.wlinkSaveStamp!)
            XCTAssertEqual(0x00000000, (messageDetails.wlinkEntryId as? FolderEntryID)!.flags)
            XCTAssertEqual(UUID(uuidString: "CBB89467-E606-4248-A820-9CC1E3B9A128"), (messageDetails.wlinkEntryId as? FolderEntryID)!.providerUid)
            XCTAssertEqual(.privateFolder, (messageDetails.wlinkEntryId as? FolderEntryID)!.folderType)
            XCTAssertEqual(UUID(uuidString: "F711B14A-92C8-4094-9843-750BE6086BC4"), (messageDetails.wlinkEntryId as? FolderEntryID)!.databaseGuid)
            XCTAssertEqual(3378799232155648, (messageDetails.wlinkEntryId as? FolderEntryID)!.globalCounter)
            XCTAssertEqual(0x0000, (messageDetails.wlinkEntryId as? FolderEntryID)!.pad)
            XCTAssertEqual("EX", messageDetails.creatorAddressType!)
            XCTAssertEqual([.read, .unsent, .fai], messageDetails.messageFlags)
            XCTAssertEqual([0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x0B, 0xFE, 0x7F, 0x03, 0x00, 0x30, 0x4C, 0x53, 0x34], [UInt8]((messageDetails.getProperty(id: .PR_CREATOR_SID) as Data?)!))
            XCTAssertEqual(2, (messageDetails.getProperty(id: .unknown0x365A) as UInt32?)!)
            XCTAssertEqual(1601557199.0, (messageDetails.getProperty(id: .unknown0x0F0A) as Date?)!.timeIntervalSince1970)
            XCTAssertEqual(1601557199.0, messageDetails.creationTime!.timeIntervalSince1970)
            XCTAssertEqual("Inbox", messageDetails.conversationTopic!)
            XCTAssertTrue((messageDetails.getProperty(id: .unknown0x36FA) as Bool?)!)
            XCTAssertEqual(0, (messageDetails.getProperty(id: .unknown0x1213) as UInt32?)!)
            XCTAssertEqual(.normalFolder, messageDetails.wlinkType!)

            XCTAssertEqual(0, messageDetails.attachments.count)
            XCTAssertEqual(0, messageDetails.recipients.count)

            }
            }
        }
    }

    static var allTests = [
        ("testExample", testExample),
        ("testAnsi", testAnsi),
        ("testOst", testOst),
    ]
}
